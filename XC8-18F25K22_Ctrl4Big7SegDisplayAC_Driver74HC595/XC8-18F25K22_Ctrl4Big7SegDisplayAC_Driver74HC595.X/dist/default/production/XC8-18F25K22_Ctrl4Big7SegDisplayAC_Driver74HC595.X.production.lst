

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat Jun 24 19:15:47 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27  0000                     
    28                           ; Version 2.35
    29                           ; Generated 05/05/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F25K22 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataCOMRAM
    65  007A83                     __pidataCOMRAM:
    66                           	callstack 0
    67                           
    68                           ;initializer for _digits
    69  007A83  A0                 	db	160
    70  007A84  F6                 	db	246
    71  007A85  61                 	db	97
    72  007A86  62                 	db	98
    73  007A87  36                 	db	54
    74  007A88  2A                 	db	42
    75  007A89  28                 	db	40
    76  007A8A  E6                 	db	230
    77  007A8B  20                 	db	32
    78  007A8C  22                 	db	34
    79  007A8D  24                 	db	36
    80  007A8E  38                 	db	56
    81  007A8F  A9                 	db	169
    82  007A90  70                 	db	112
    83  007A91  29                 	db	41
    84  007A92  2D                 	db	45
    85  007A93  FF                 	db	255
    86                           
    87                           ;initializer for _digitsPCBWay
    88  007A94  7F                 	db	127
    89  007A95  7F                 	db	127
    90  007A96  7F                 	db	127
    91  007A97  7F                 	db	127
    92  007A98  25                 	db	37
    93  007A99  A9                 	db	169
    94  007A9A  38                 	db	56
    95  007A9B  B8                 	db	184
    96  007A9C  F2                 	db	242
    97  007A9D  24                 	db	36
    98  007A9E  36                 	db	54
    99  007A9F  7F                 	db	127
   100  007AA0  7F                 	db	127
   101  007AA1  7F                 	db	127
   102  007AA2  7F                 	db	127
   103                           
   104                           ;initializer for _NUMBERS_OF_DISPLAYS
   105  007AA3  04                 	db	4
   106  0000                     _PORTB	set	3969
   107  0000                     _ANSELC	set	3898
   108  0000                     _ANSELB	set	3897
   109  0000                     _ANSELA	set	3896
   110  0000                     _LATBbits	set	3978
   111  0000                     _TRISB	set	3987
   112  0000                     _OSCCONbits	set	4051
   113  0000                     _TRISC	set	3988
   114  0000                     _PORTC	set	3970
   115                           
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119  007B0A                     __pcinit:
   120                           	callstack 0
   121  007B0A                     start_initialization:
   122                           	callstack 0
   123  007B0A                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Initialize objects allocated to COMRAM (33 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  007B0A  0E83               	movlw	low __pidataCOMRAM
   129  007B0C  6EF6               	movwf	tblptrl,c
   130  007B0E  0E7A               	movlw	high __pidataCOMRAM
   131  007B10  6EF7               	movwf	tblptrh,c
   132  007B12  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  007B14  6EF8               	movwf	tblptru,c
   134  007B16  EE00  F001         	lfsr	0,__pdataCOMRAM
   135  007B1A  EE10 F021          	lfsr	1,33
   136  007B1E                     copy_data0:
   137  007B1E  0009               	tblrd		*+
   138  007B20  CFF5 FFEE          	movff	tablat,postinc0
   139  007B24  50E5               	movf	postdec1,w,c
   140  007B26  50E1               	movf	fsr1l,w,c
   141  007B28  E1FA               	bnz	copy_data0
   142                           
   143                           ; Clear objects allocated to COMRAM (7 bytes)
   144  007B2A  EE00  F03A         	lfsr	0,__pbssCOMRAM
   145  007B2E  0E07               	movlw	7
   146  007B30                     clear_0:
   147  007B30  6AEE               	clrf	postinc0,c
   148  007B32  06E8               	decf	wreg,f,c
   149  007B34  E1FD               	bnz	clear_0
   150  007B36                     end_of_initialization:
   151                           	callstack 0
   152  007B36                     __end_of__initialization:
   153                           	callstack 0
   154  007B36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  007B38  6EF8               	movwf	tblptru,c
   156  007B3A  0100               	movlb	0
   157  007B3C  EF52  F03D         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  00003A                     __pbssCOMRAM:
   161                           	callstack 0
   162  00003A                     _display_values:
   163                           	callstack 0
   164  00003A                     	ds	6
   165  000040                     _countS:
   166                           	callstack 0
   167  000040                     	ds	1
   168                           
   169                           	psect	dataCOMRAM
   170  000001                     __pdataCOMRAM:
   171                           	callstack 0
   172  000001                     _digits:
   173                           	callstack 0
   174  000001                     	ds	17
   175  000012                     _digitsPCBWay:
   176                           	callstack 0
   177  000012                     	ds	15
   178  000021                     _NUMBERS_OF_DISPLAYS:
   179                           	callstack 0
   180  000021                     	ds	1
   181                           
   182                           	psect	cstackCOMRAM
   183  000022                     __pcstackCOMRAM:
   184                           	callstack 0
   185  000022                     ??_DRIVER_74HC595_ShiftOut:
   186  000022                     ?___lwmod:
   187                           	callstack 0
   188  000022                     ___lwmod@dividend:
   189                           	callstack 0
   190                           
   191                           ; 2 bytes @ 0x0
   192  000022                     	ds	2
   193  000024                     ___lwmod@divisor:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x2
   197  000024                     	ds	1
   198  000025                     DRIVER_74HC595_ShiftOut@data:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x3
   202  000025                     	ds	1
   203  000026                     DRIVER_74HC595_ShiftOut@i:
   204                           	callstack 0
   205  000026                     ___lwmod@counter:
   206                           	callstack 0
   207                           
   208                           ; 1 bytes @ 0x4
   209  000026                     	ds	1
   210  000027                     ?___lwdiv:
   211                           	callstack 0
   212  000027                     DISPLAY_Update@i:
   213                           	callstack 0
   214  000027                     ___lwdiv@dividend:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x5
   218  000027                     	ds	1
   219  000028                     ??_SPONSOR_Welcome:
   220  000028                     DISPLAY_Set@D2:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x6
   224  000028                     	ds	1
   225  000029                     DISPLAY_Set@D3:
   226                           	callstack 0
   227  000029                     ___lwdiv@divisor:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x7
   231  000029                     	ds	1
   232  00002A                     DISPLAY_Set@D4:
   233                           	callstack 0
   234  00002A                     SPONSOR_Welcome@x:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x8
   238  00002A                     	ds	1
   239  00002B                     ??_DISPLAY_Set:
   240  00002B                     ___lwdiv@quotient:
   241                           	callstack 0
   242                           
   243                           ; 2 bytes @ 0x9
   244  00002B                     	ds	2
   245  00002D                     DISPLAY_Set@D1:
   246                           	callstack 0
   247  00002D                     ___lwdiv@counter:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xB
   251  00002D                     	ds	1
   252  00002E                     DISPLAY_Write@num:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xC
   256  00002E                     	ds	2
   257  000030                     DISPLAY_Write@digit1:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0xE
   261  000030                     	ds	1
   262  000031                     DISPLAY_Write@digit2:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0xF
   266  000031                     	ds	1
   267  000032                     DISPLAY_Write@digit3:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x10
   271  000032                     	ds	1
   272  000033                     DISPLAY_Write@digit4:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x11
   276  000033                     	ds	1
   277  000034                     ??_SYSTEM_Process:
   278                           
   279                           ; 1 bytes @ 0x12
   280  000034                     	ds	2
   281  000036                     SYSTEM_Process@i:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x14
   285  000036                     	ds	2
   286  000038                     ??_main:
   287                           
   288                           ; 1 bytes @ 0x16
   289  000038                     	ds	2
   290                           
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   293 ;;
   294 ;; *************** function _main *****************
   295 ;; Defined at:
   296 ;;		line 22 in file "main.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;		None
   299 ;; Auto vars:     Size  Location     Type
   300 ;;		None
   301 ;; Return value:  Size  Location     Type
   302 ;;                  1    wreg      void 
   303 ;; Registers used:
   304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   305 ;; Tracked objects:
   306 ;;		On entry : 0/0
   307 ;;		On exit  : 0/0
   308 ;;		Unchanged: 0/0
   309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   310 ;;      Params:         0       0       0       0       0       0       0
   311 ;;      Locals:         0       0       0       0       0       0       0
   312 ;;      Temps:          2       0       0       0       0       0       0
   313 ;;      Totals:         2       0       0       0       0       0       0
   314 ;;Total ram usage:        2 bytes
   315 ;; Hardware stack levels required when called: 5
   316 ;; This function calls:
   317 ;;		_DISPLAY_Reset
   318 ;;		_SPONSOR_Welcome
   319 ;;		_SYSTEM_Initialize
   320 ;;		_SYSTEM_Process
   321 ;; This function is called by:
   322 ;;		Startup code after reset
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text0
   327  007AA4                     __ptext0:
   328                           	callstack 0
   329  007AA4                     _main:
   330                           	callstack 26
   331  007AA4                     
   332                           ;main.c: 23:     SYSTEM_Initialize();
   333  007AA4  EC22  F03D         	call	_SYSTEM_Initialize	;wreg free
   334  007AA8                     
   335                           ;main.c: 24:     DISPLAY_Reset();
   336  007AA8  EC27  F03D         	call	_DISPLAY_Reset	;wreg free
   337  007AAC                     
   338                           ;main.c: 25:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   339  007AAC  0E15               	movlw	21
   340  007AAE  6E39               	movwf	(??_main+1)^0,c
   341  007AB0  0E4B               	movlw	75
   342  007AB2  6E38               	movwf	??_main^0,c
   343  007AB4  0EBE               	movlw	190
   344  007AB6                     u277:
   345  007AB6  2EE8               	decfsz	wreg,f,c
   346  007AB8  D7FE               	bra	u277
   347  007ABA  2E38               	decfsz	??_main^0,f,c
   348  007ABC  D7FC               	bra	u277
   349  007ABE  2E39               	decfsz	(??_main+1)^0,f,c
   350  007AC0  D7FA               	bra	u277
   351  007AC2  D000               	nop2	
   352  007AC4                     
   353                           ;main.c: 26:     SPONSOR_Welcome();
   354  007AC4  EC38  F03E         	call	_SPONSOR_Welcome	;wreg free
   355  007AC8                     l1118:
   356                           
   357                           ;main.c: 28:         SYSTEM_Process();
   358  007AC8  EC7D  F03E         	call	_SYSTEM_Process	;wreg free
   359  007ACC  EF64  F03D         	goto	l1118
   360  007AD0  EF00  F000         	goto	start
   361  007AD4                     __end_of_main:
   362                           	callstack 0
   363                           
   364 ;; *************** function _SYSTEM_Process *****************
   365 ;; Defined at:
   366 ;;		line 53 in file "mcu.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  i               2   20[COMRAM] unsigned short 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  1    wreg      void 
   373 ;; Registers used:
   374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   380 ;;      Params:         0       0       0       0       0       0       0
   381 ;;      Locals:         2       0       0       0       0       0       0
   382 ;;      Temps:          2       0       0       0       0       0       0
   383 ;;      Totals:         4       0       0       0       0       0       0
   384 ;;Total ram usage:        4 bytes
   385 ;; Hardware stack levels used: 1
   386 ;; Hardware stack levels required when called: 4
   387 ;; This function calls:
   388 ;;		_DISPLAY_Reset
   389 ;;		_DISPLAY_Set
   390 ;;		_DISPLAY_Write
   391 ;; This function is called by:
   392 ;;		_main
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text1
   397  007CFA                     __ptext1:
   398                           	callstack 0
   399  007CFA                     _SYSTEM_Process:
   400                           	callstack 26
   401  007CFA                     
   402                           ;mcu.c: 55:     DISPLAY_Reset();
   403  007CFA  EC27  F03D         	call	_DISPLAY_Reset	;wreg free
   404  007CFE                     
   405                           ;mcu.c: 56:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   406  007CFE  0E15               	movlw	21
   407  007D00  6E35               	movwf	(??_SYSTEM_Process+1)^0,c
   408  007D02  0E4B               	movlw	75
   409  007D04  6E34               	movwf	??_SYSTEM_Process^0,c
   410  007D06  0EBE               	movlw	190
   411  007D08                     u287:
   412  007D08  2EE8               	decfsz	wreg,f,c
   413  007D0A  D7FE               	bra	u287
   414  007D0C  2E34               	decfsz	??_SYSTEM_Process^0,f,c
   415  007D0E  D7FC               	bra	u287
   416  007D10  2E35               	decfsz	(??_SYSTEM_Process+1)^0,f,c
   417  007D12  D7FA               	bra	u287
   418  007D14  D000               	nop2	
   419  007D16                     
   420                           ;mcu.c: 59:     DISPLAY_Set(10, 11, 12, 13);
   421  007D16  0E0B               	movlw	11
   422  007D18  6E28               	movwf	DISPLAY_Set@D2^0,c
   423  007D1A  0E0C               	movlw	12
   424  007D1C  6E29               	movwf	DISPLAY_Set@D3^0,c
   425  007D1E  0E0D               	movlw	13
   426  007D20  6E2A               	movwf	DISPLAY_Set@D4^0,c
   427  007D22  0E0A               	movlw	10
   428  007D24  ECD9  F03E         	call	_DISPLAY_Set
   429                           
   430                           ;mcu.c: 60:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   431  007D28  0E15               	movlw	21
   432  007D2A  6E35               	movwf	(??_SYSTEM_Process+1)^0,c
   433  007D2C  0E4B               	movlw	75
   434  007D2E  6E34               	movwf	??_SYSTEM_Process^0,c
   435  007D30  0EBE               	movlw	190
   436  007D32                     u297:
   437  007D32  2EE8               	decfsz	wreg,f,c
   438  007D34  D7FE               	bra	u297
   439  007D36  2E34               	decfsz	??_SYSTEM_Process^0,f,c
   440  007D38  D7FC               	bra	u297
   441  007D3A  2E35               	decfsz	(??_SYSTEM_Process+1)^0,f,c
   442  007D3C  D7FA               	bra	u297
   443  007D3E  D000               	nop2	
   444  007D40                     
   445                           ;mcu.c: 63:     DISPLAY_Set(12, 13, 14, 15);
   446  007D40  0E0D               	movlw	13
   447  007D42  6E28               	movwf	DISPLAY_Set@D2^0,c
   448  007D44  0E0E               	movlw	14
   449  007D46  6E29               	movwf	DISPLAY_Set@D3^0,c
   450  007D48  0E0F               	movlw	15
   451  007D4A  6E2A               	movwf	DISPLAY_Set@D4^0,c
   452  007D4C  0E0C               	movlw	12
   453  007D4E  ECD9  F03E         	call	_DISPLAY_Set
   454  007D52                     
   455                           ;mcu.c: 64:     _delay((unsigned long)((1000)*(16000000/4000.0)));
   456  007D52  0E15               	movlw	21
   457  007D54  6E35               	movwf	(??_SYSTEM_Process+1)^0,c
   458  007D56  0E4B               	movlw	75
   459  007D58  6E34               	movwf	??_SYSTEM_Process^0,c
   460  007D5A  0EBE               	movlw	190
   461  007D5C                     u307:
   462  007D5C  2EE8               	decfsz	wreg,f,c
   463  007D5E  D7FE               	bra	u307
   464  007D60  2E34               	decfsz	??_SYSTEM_Process^0,f,c
   465  007D62  D7FC               	bra	u307
   466  007D64  2E35               	decfsz	(??_SYSTEM_Process+1)^0,f,c
   467  007D66  D7FA               	bra	u307
   468  007D68  D000               	nop2	
   469  007D6A                     
   470                           ;mcu.c: 67:     for (uint16_t i=0; i<=9999; i++){
   471  007D6A  0E00               	movlw	0
   472  007D6C  6E37               	movwf	(SYSTEM_Process@i+1)^0,c
   473  007D6E  0E00               	movlw	0
   474  007D70  6E36               	movwf	SYSTEM_Process@i^0,c
   475  007D72                     l1102:
   476                           
   477                           ;mcu.c: 68:         DISPLAY_Write(i);
   478  007D72  C036  F02E         	movff	SYSTEM_Process@i,DISPLAY_Write@num
   479  007D76  C037  F02F         	movff	SYSTEM_Process@i+1,DISPLAY_Write@num+1
   480  007D7A  EC3D  F03F         	call	_DISPLAY_Write	;wreg free
   481  007D7E                     
   482                           ;mcu.c: 69:         _delay((unsigned long)((200)*(16000000/4000.0)));
   483  007D7E  0E05               	movlw	5
   484  007D80  6E35               	movwf	(??_SYSTEM_Process+1)^0,c
   485  007D82  0E0F               	movlw	15
   486  007D84  6E34               	movwf	??_SYSTEM_Process^0,c
   487  007D86  0EF1               	movlw	241
   488  007D88                     u317:
   489  007D88  2EE8               	decfsz	wreg,f,c
   490  007D8A  D7FE               	bra	u317
   491  007D8C  2E34               	decfsz	??_SYSTEM_Process^0,f,c
   492  007D8E  D7FC               	bra	u317
   493  007D90  2E35               	decfsz	(??_SYSTEM_Process+1)^0,f,c
   494  007D92  D7FA               	bra	u317
   495  007D94  F000               	nop	
   496  007D96                     
   497                           ;mcu.c: 70:         }
   498  007D96  4A36               	infsnz	SYSTEM_Process@i^0,f,c
   499  007D98  2A37               	incf	(SYSTEM_Process@i+1)^0,f,c
   500  007D9A  0E10               	movlw	16
   501  007D9C  5C36               	subwf	SYSTEM_Process@i^0,w,c
   502  007D9E  0E27               	movlw	39
   503  007DA0  5837               	subwfb	(SYSTEM_Process@i+1)^0,w,c
   504  007DA2  A0D8               	btfss	status,0,c
   505  007DA4  EFD6  F03E         	goto	u261
   506  007DA8  EFD8  F03E         	goto	u260
   507  007DAC                     u261:
   508  007DAC  EFB9  F03E         	goto	l1102
   509  007DB0                     u260:
   510  007DB0  0012               	return		;funcret
   511  007DB2                     __end_of_SYSTEM_Process:
   512                           	callstack 0
   513                           
   514 ;; *************** function _DISPLAY_Write *****************
   515 ;; Defined at:
   516 ;;		line 79 in file "Display7seg_74HC595.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  num             2   12[COMRAM] unsigned short 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  digit4          1   17[COMRAM] unsigned char 
   521 ;;  digit3          1   16[COMRAM] unsigned char 
   522 ;;  digit2          1   15[COMRAM] unsigned char 
   523 ;;  digit1          1   14[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   533 ;;      Params:         2       0       0       0       0       0       0
   534 ;;      Locals:         4       0       0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0
   536 ;;      Totals:         6       0       0       0       0       0       0
   537 ;;Total ram usage:        6 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; Hardware stack levels required when called: 3
   540 ;; This function calls:
   541 ;;		_DISPLAY_Set
   542 ;;		___lwdiv
   543 ;;		___lwmod
   544 ;; This function is called by:
   545 ;;		_SYSTEM_Process
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text2
   550  007E7A                     __ptext2:
   551                           	callstack 0
   552  007E7A                     _DISPLAY_Write:
   553                           	callstack 26
   554  007E7A                     
   555                           ;Display7seg_74HC595.c: 80:     uint8_t digit1=16;
   556  007E7A  0E10               	movlw	16
   557  007E7C  6E30               	movwf	DISPLAY_Write@digit1^0,c
   558                           
   559                           ;Display7seg_74HC595.c: 81:     uint8_t digit2=16;
   560  007E7E  0E10               	movlw	16
   561  007E80  6E31               	movwf	DISPLAY_Write@digit2^0,c
   562                           
   563                           ;Display7seg_74HC595.c: 82:     uint8_t digit3=16;
   564  007E82  0E10               	movlw	16
   565  007E84  6E32               	movwf	DISPLAY_Write@digit3^0,c
   566  007E86                     
   567                           ;Display7seg_74HC595.c: 85:     if (num<10){
   568  007E86  502F               	movf	(DISPLAY_Write@num+1)^0,w,c
   569  007E88  E107               	bnz	u231
   570  007E8A  0E0A               	movlw	10
   571  007E8C  5C2E               	subwf	DISPLAY_Write@num^0,w,c
   572  007E8E  B0D8               	btfsc	status,0,c
   573  007E90  EF4C  F03F         	goto	u231
   574  007E94  EF4E  F03F         	goto	u230
   575  007E98                     u231:
   576  007E98  EF52  F03F         	goto	l1074
   577  007E9C                     u230:
   578  007E9C                     
   579                           ;Display7seg_74HC595.c: 86:         digit4 = (uint8_t)(num);
   580  007E9C  C02E  F033         	movff	DISPLAY_Write@num,DISPLAY_Write@digit4
   581                           
   582                           ;Display7seg_74HC595.c: 87:     }
   583  007EA0  EFF6  F03F         	goto	l1084
   584  007EA4                     l1074:
   585  007EA4  502F               	movf	(DISPLAY_Write@num+1)^0,w,c
   586  007EA6  E107               	bnz	u241
   587  007EA8  0E64               	movlw	100
   588  007EAA  5C2E               	subwf	DISPLAY_Write@num^0,w,c
   589  007EAC  B0D8               	btfsc	status,0,c
   590  007EAE  EF5B  F03F         	goto	u241
   591  007EB2  EF5D  F03F         	goto	u240
   592  007EB6                     u241:
   593  007EB6  EF77  F03F         	goto	l1078
   594  007EBA                     u240:
   595  007EBA                     
   596                           ;Display7seg_74HC595.c: 89:         digit4 = (uint8_t)(num%10);
   597  007EBA  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   598  007EBE  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   599  007EC2  0E00               	movlw	0
   600  007EC4  6E25               	movwf	(___lwmod@divisor+1)^0,c
   601  007EC6  0E0A               	movlw	10
   602  007EC8  6E24               	movwf	___lwmod@divisor^0,c
   603  007ECA  ECCC  F03D         	call	___lwmod	;wreg free
   604  007ECE  5022               	movf	?___lwmod^0,w,c
   605  007ED0  6E33               	movwf	DISPLAY_Write@digit4^0,c
   606                           
   607                           ;Display7seg_74HC595.c: 90:         digit3 = (uint8_t)(num/10);
   608  007ED2  C02E  F027         	movff	DISPLAY_Write@num,___lwdiv@dividend
   609  007ED6  C02F  F028         	movff	DISPLAY_Write@num+1,___lwdiv@dividend+1
   610  007EDA  0E00               	movlw	0
   611  007EDC  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   612  007EDE  0E0A               	movlw	10
   613  007EE0  6E29               	movwf	___lwdiv@divisor^0,c
   614  007EE2  ECFE  F03D         	call	___lwdiv	;wreg free
   615  007EE6  5027               	movf	?___lwdiv^0,w,c
   616  007EE8  6E32               	movwf	DISPLAY_Write@digit3^0,c
   617                           
   618                           ;Display7seg_74HC595.c: 91:     }
   619  007EEA  EFF6  F03F         	goto	l1084
   620  007EEE                     l1078:
   621  007EEE  0EE8               	movlw	232
   622  007EF0  5C2E               	subwf	DISPLAY_Write@num^0,w,c
   623  007EF2  0E03               	movlw	3
   624  007EF4  582F               	subwfb	(DISPLAY_Write@num+1)^0,w,c
   625  007EF6  B0D8               	btfsc	status,0,c
   626  007EF8  EF80  F03F         	goto	u251
   627  007EFC  EF82  F03F         	goto	u250
   628  007F00                     u251:
   629  007F00  EFB2  F03F         	goto	l1082
   630  007F04                     u250:
   631  007F04                     
   632                           ;Display7seg_74HC595.c: 93:         digit4 = (uint8_t)(num%10);
   633  007F04  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   634  007F08  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   635  007F0C  0E00               	movlw	0
   636  007F0E  6E25               	movwf	(___lwmod@divisor+1)^0,c
   637  007F10  0E0A               	movlw	10
   638  007F12  6E24               	movwf	___lwmod@divisor^0,c
   639  007F14  ECCC  F03D         	call	___lwmod	;wreg free
   640  007F18  5022               	movf	?___lwmod^0,w,c
   641  007F1A  6E33               	movwf	DISPLAY_Write@digit4^0,c
   642                           
   643                           ;Display7seg_74HC595.c: 94:         digit3 = (uint8_t)((num%100)/10);
   644  007F1C  0E00               	movlw	0
   645  007F1E  6E25               	movwf	(___lwmod@divisor+1)^0,c
   646  007F20  0E64               	movlw	100
   647  007F22  6E24               	movwf	___lwmod@divisor^0,c
   648  007F24  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   649  007F28  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   650  007F2C  ECCC  F03D         	call	___lwmod	;wreg free
   651  007F30  C022  F027         	movff	?___lwmod,___lwdiv@dividend
   652  007F34  C023  F028         	movff	?___lwmod+1,___lwdiv@dividend+1
   653  007F38  0E00               	movlw	0
   654  007F3A  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   655  007F3C  0E0A               	movlw	10
   656  007F3E  6E29               	movwf	___lwdiv@divisor^0,c
   657  007F40  ECFE  F03D         	call	___lwdiv	;wreg free
   658  007F44  5027               	movf	?___lwdiv^0,w,c
   659  007F46  6E32               	movwf	DISPLAY_Write@digit3^0,c
   660                           
   661                           ;Display7seg_74HC595.c: 95:         digit2 = (uint8_t)(num/100);
   662  007F48  C02E  F027         	movff	DISPLAY_Write@num,___lwdiv@dividend
   663  007F4C  C02F  F028         	movff	DISPLAY_Write@num+1,___lwdiv@dividend+1
   664  007F50  0E00               	movlw	0
   665  007F52  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   666  007F54  0E64               	movlw	100
   667  007F56  6E29               	movwf	___lwdiv@divisor^0,c
   668  007F58  ECFE  F03D         	call	___lwdiv	;wreg free
   669  007F5C  5027               	movf	?___lwdiv^0,w,c
   670  007F5E  6E31               	movwf	DISPLAY_Write@digit2^0,c
   671                           
   672                           ;Display7seg_74HC595.c: 96:     }
   673  007F60  EFF6  F03F         	goto	l1084
   674  007F64                     l1082:
   675                           
   676                           ;Display7seg_74HC595.c: 98:         digit4 = (uint8_t)(num%10);
   677  007F64  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   678  007F68  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   679  007F6C  0E00               	movlw	0
   680  007F6E  6E25               	movwf	(___lwmod@divisor+1)^0,c
   681  007F70  0E0A               	movlw	10
   682  007F72  6E24               	movwf	___lwmod@divisor^0,c
   683  007F74  ECCC  F03D         	call	___lwmod	;wreg free
   684  007F78  5022               	movf	?___lwmod^0,w,c
   685  007F7A  6E33               	movwf	DISPLAY_Write@digit4^0,c
   686                           
   687                           ;Display7seg_74HC595.c: 99:         digit3 = (uint8_t)((num%100)/10);
   688  007F7C  0E00               	movlw	0
   689  007F7E  6E25               	movwf	(___lwmod@divisor+1)^0,c
   690  007F80  0E64               	movlw	100
   691  007F82  6E24               	movwf	___lwmod@divisor^0,c
   692  007F84  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   693  007F88  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   694  007F8C  ECCC  F03D         	call	___lwmod	;wreg free
   695  007F90  C022  F027         	movff	?___lwmod,___lwdiv@dividend
   696  007F94  C023  F028         	movff	?___lwmod+1,___lwdiv@dividend+1
   697  007F98  0E00               	movlw	0
   698  007F9A  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   699  007F9C  0E0A               	movlw	10
   700  007F9E  6E29               	movwf	___lwdiv@divisor^0,c
   701  007FA0  ECFE  F03D         	call	___lwdiv	;wreg free
   702  007FA4  5027               	movf	?___lwdiv^0,w,c
   703  007FA6  6E32               	movwf	DISPLAY_Write@digit3^0,c
   704                           
   705                           ;Display7seg_74HC595.c: 100:         digit2 = (uint8_t)((num%1000)/100);
   706  007FA8  0E03               	movlw	3
   707  007FAA  6E25               	movwf	(___lwmod@divisor+1)^0,c
   708  007FAC  0EE8               	movlw	232
   709  007FAE  6E24               	movwf	___lwmod@divisor^0,c
   710  007FB0  C02E  F022         	movff	DISPLAY_Write@num,___lwmod@dividend
   711  007FB4  C02F  F023         	movff	DISPLAY_Write@num+1,___lwmod@dividend+1
   712  007FB8  ECCC  F03D         	call	___lwmod	;wreg free
   713  007FBC  C022  F027         	movff	?___lwmod,___lwdiv@dividend
   714  007FC0  C023  F028         	movff	?___lwmod+1,___lwdiv@dividend+1
   715  007FC4  0E00               	movlw	0
   716  007FC6  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   717  007FC8  0E64               	movlw	100
   718  007FCA  6E29               	movwf	___lwdiv@divisor^0,c
   719  007FCC  ECFE  F03D         	call	___lwdiv	;wreg free
   720  007FD0  5027               	movf	?___lwdiv^0,w,c
   721  007FD2  6E31               	movwf	DISPLAY_Write@digit2^0,c
   722                           
   723                           ;Display7seg_74HC595.c: 101:         digit1 = (uint8_t)(num/1000);
   724  007FD4  C02E  F027         	movff	DISPLAY_Write@num,___lwdiv@dividend
   725  007FD8  C02F  F028         	movff	DISPLAY_Write@num+1,___lwdiv@dividend+1
   726  007FDC  0E03               	movlw	3
   727  007FDE  6E2A               	movwf	(___lwdiv@divisor+1)^0,c
   728  007FE0  0EE8               	movlw	232
   729  007FE2  6E29               	movwf	___lwdiv@divisor^0,c
   730  007FE4  ECFE  F03D         	call	___lwdiv	;wreg free
   731  007FE8  5027               	movf	?___lwdiv^0,w,c
   732  007FEA  6E30               	movwf	DISPLAY_Write@digit1^0,c
   733  007FEC                     l1084:
   734                           
   735                           ;Display7seg_74HC595.c: 103:   DISPLAY_Set(digit1, digit2, digit3, digit4);
   736  007FEC  C031  F028         	movff	DISPLAY_Write@digit2,DISPLAY_Set@D2
   737  007FF0  C032  F029         	movff	DISPLAY_Write@digit3,DISPLAY_Set@D3
   738  007FF4  C033  F02A         	movff	DISPLAY_Write@digit4,DISPLAY_Set@D4
   739  007FF8  5030               	movf	DISPLAY_Write@digit1^0,w,c
   740  007FFA  ECD9  F03E         	call	_DISPLAY_Set
   741  007FFE  0012               	return		;funcret
   742  008000                     __end_of_DISPLAY_Write:
   743                           	callstack 0
   744                           
   745 ;; *************** function ___lwmod *****************
   746 ;; Defined at:
   747 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  dividend        2    0[COMRAM] unsigned int 
   750 ;;  divisor         2    2[COMRAM] unsigned int 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  counter         1    4[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  2    0[COMRAM] unsigned int 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   762 ;;      Params:         4       0       0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0
   765 ;;      Totals:         5       0       0       0       0       0       0
   766 ;;Total ram usage:        5 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_DISPLAY_Write
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text3
   776  007B98                     __ptext3:
   777                           	callstack 0
   778  007B98                     ___lwmod:
   779                           	callstack 28
   780  007B98  5024               	movf	___lwmod@divisor^0,w,c
   781  007B9A  1025               	iorwf	(___lwmod@divisor+1)^0,w,c
   782  007B9C  B4D8               	btfsc	status,2,c
   783  007B9E  EFD3  F03D         	goto	u201
   784  007BA2  EFD5  F03D         	goto	u200
   785  007BA6                     u201:
   786  007BA6  EFF9  F03D         	goto	l652
   787  007BAA                     u200:
   788  007BAA  0E01               	movlw	1
   789  007BAC  6E26               	movwf	___lwmod@counter^0,c
   790  007BAE  EFDD  F03D         	goto	l1056
   791  007BB2                     l1054:
   792  007BB2  90D8               	bcf	status,0,c
   793  007BB4  3624               	rlcf	___lwmod@divisor^0,f,c
   794  007BB6  3625               	rlcf	(___lwmod@divisor+1)^0,f,c
   795  007BB8  2A26               	incf	___lwmod@counter^0,f,c
   796  007BBA                     l1056:
   797  007BBA  AE25               	btfss	(___lwmod@divisor+1)^0,7,c
   798  007BBC  EFE2  F03D         	goto	u211
   799  007BC0  EFE4  F03D         	goto	u210
   800  007BC4                     u211:
   801  007BC4  EFD9  F03D         	goto	l1054
   802  007BC8                     u210:
   803  007BC8                     l1058:
   804  007BC8  5024               	movf	___lwmod@divisor^0,w,c
   805  007BCA  5C22               	subwf	___lwmod@dividend^0,w,c
   806  007BCC  5025               	movf	(___lwmod@divisor+1)^0,w,c
   807  007BCE  5823               	subwfb	(___lwmod@dividend+1)^0,w,c
   808  007BD0  A0D8               	btfss	status,0,c
   809  007BD2  EFED  F03D         	goto	u221
   810  007BD6  EFEF  F03D         	goto	u220
   811  007BDA                     u221:
   812  007BDA  EFF3  F03D         	goto	l1062
   813  007BDE                     u220:
   814  007BDE  5024               	movf	___lwmod@divisor^0,w,c
   815  007BE0  5E22               	subwf	___lwmod@dividend^0,f,c
   816  007BE2  5025               	movf	(___lwmod@divisor+1)^0,w,c
   817  007BE4  5A23               	subwfb	(___lwmod@dividend+1)^0,f,c
   818  007BE6                     l1062:
   819  007BE6  90D8               	bcf	status,0,c
   820  007BE8  3225               	rrcf	(___lwmod@divisor+1)^0,f,c
   821  007BEA  3224               	rrcf	___lwmod@divisor^0,f,c
   822  007BEC  2E26               	decfsz	___lwmod@counter^0,f,c
   823  007BEE  EFE4  F03D         	goto	l1058
   824  007BF2                     l652:
   825  007BF2  C022  F022         	movff	___lwmod@dividend,?___lwmod
   826  007BF6  C023  F023         	movff	___lwmod@dividend+1,?___lwmod+1
   827  007BFA  0012               	return		;funcret
   828  007BFC                     __end_of___lwmod:
   829                           	callstack 0
   830                           
   831 ;; *************** function ___lwdiv *****************
   832 ;; Defined at:
   833 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  dividend        2    5[COMRAM] unsigned int 
   836 ;;  divisor         2    7[COMRAM] unsigned int 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  quotient        2    9[COMRAM] unsigned int 
   839 ;;  counter         1   11[COMRAM] unsigned char 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2    5[COMRAM] unsigned int 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   849 ;;      Params:         4       0       0       0       0       0       0
   850 ;;      Locals:         3       0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0
   852 ;;      Totals:         7       0       0       0       0       0       0
   853 ;;Total ram usage:        7 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_DISPLAY_Write
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text4
   863  007BFC                     __ptext4:
   864                           	callstack 0
   865  007BFC                     ___lwdiv:
   866                           	callstack 28
   867  007BFC  0E00               	movlw	0
   868  007BFE  6E2C               	movwf	(___lwdiv@quotient+1)^0,c
   869  007C00  0E00               	movlw	0
   870  007C02  6E2B               	movwf	___lwdiv@quotient^0,c
   871  007C04  5029               	movf	___lwdiv@divisor^0,w,c
   872  007C06  102A               	iorwf	(___lwdiv@divisor+1)^0,w,c
   873  007C08  B4D8               	btfsc	status,2,c
   874  007C0A  EF09  F03E         	goto	u171
   875  007C0E  EF0B  F03E         	goto	u170
   876  007C12                     u171:
   877  007C12  EF33  F03E         	goto	l642
   878  007C16                     u170:
   879  007C16  0E01               	movlw	1
   880  007C18  6E2D               	movwf	___lwdiv@counter^0,c
   881  007C1A  EF13  F03E         	goto	l1036
   882  007C1E                     l1034:
   883  007C1E  90D8               	bcf	status,0,c
   884  007C20  3629               	rlcf	___lwdiv@divisor^0,f,c
   885  007C22  362A               	rlcf	(___lwdiv@divisor+1)^0,f,c
   886  007C24  2A2D               	incf	___lwdiv@counter^0,f,c
   887  007C26                     l1036:
   888  007C26  AE2A               	btfss	(___lwdiv@divisor+1)^0,7,c
   889  007C28  EF18  F03E         	goto	u181
   890  007C2C  EF1A  F03E         	goto	u180
   891  007C30                     u181:
   892  007C30  EF0F  F03E         	goto	l1034
   893  007C34                     u180:
   894  007C34                     l1038:
   895  007C34  90D8               	bcf	status,0,c
   896  007C36  362B               	rlcf	___lwdiv@quotient^0,f,c
   897  007C38  362C               	rlcf	(___lwdiv@quotient+1)^0,f,c
   898  007C3A  5029               	movf	___lwdiv@divisor^0,w,c
   899  007C3C  5C27               	subwf	___lwdiv@dividend^0,w,c
   900  007C3E  502A               	movf	(___lwdiv@divisor+1)^0,w,c
   901  007C40  5828               	subwfb	(___lwdiv@dividend+1)^0,w,c
   902  007C42  A0D8               	btfss	status,0,c
   903  007C44  EF26  F03E         	goto	u191
   904  007C48  EF28  F03E         	goto	u190
   905  007C4C                     u191:
   906  007C4C  EF2D  F03E         	goto	l1046
   907  007C50                     u190:
   908  007C50  5029               	movf	___lwdiv@divisor^0,w,c
   909  007C52  5E27               	subwf	___lwdiv@dividend^0,f,c
   910  007C54  502A               	movf	(___lwdiv@divisor+1)^0,w,c
   911  007C56  5A28               	subwfb	(___lwdiv@dividend+1)^0,f,c
   912  007C58  802B               	bsf	___lwdiv@quotient^0,0,c
   913  007C5A                     l1046:
   914  007C5A  90D8               	bcf	status,0,c
   915  007C5C  322A               	rrcf	(___lwdiv@divisor+1)^0,f,c
   916  007C5E  3229               	rrcf	___lwdiv@divisor^0,f,c
   917  007C60  2E2D               	decfsz	___lwdiv@counter^0,f,c
   918  007C62  EF1A  F03E         	goto	l1038
   919  007C66                     l642:
   920  007C66  C02B  F027         	movff	___lwdiv@quotient,?___lwdiv
   921  007C6A  C02C  F028         	movff	___lwdiv@quotient+1,?___lwdiv+1
   922  007C6E  0012               	return		;funcret
   923  007C70                     __end_of___lwdiv:
   924                           	callstack 0
   925                           
   926 ;; *************** function _DISPLAY_Reset *****************
   927 ;; Defined at:
   928 ;;		line 67 in file "Display7seg_74HC595.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;		None
   931 ;; Auto vars:     Size  Location     Type
   932 ;;		None
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   942 ;;      Params:         0       0       0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 3
   949 ;; This function calls:
   950 ;;		_DISPLAY_Set
   951 ;; This function is called by:
   952 ;;		_main
   953 ;;		_SYSTEM_Process
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958  007A4E                     __ptext5:
   959                           	callstack 0
   960  007A4E                     _DISPLAY_Reset:
   961                           	callstack 26
   962  007A4E                     
   963                           ;Display7seg_74HC595.c: 68:     DISPLAY_Set(16, 16, 16, 16);
   964  007A4E  0E10               	movlw	16
   965  007A50  6E28               	movwf	DISPLAY_Set@D2^0,c
   966  007A52  0E10               	movlw	16
   967  007A54  6E29               	movwf	DISPLAY_Set@D3^0,c
   968  007A56  0E10               	movlw	16
   969  007A58  6E2A               	movwf	DISPLAY_Set@D4^0,c
   970  007A5A  0E10               	movlw	16
   971  007A5C  ECD9  F03E         	call	_DISPLAY_Set
   972  007A60  0012               	return		;funcret
   973  007A62                     __end_of_DISPLAY_Reset:
   974                           	callstack 0
   975                           
   976 ;; *************** function _DISPLAY_Set *****************
   977 ;; Defined at:
   978 ;;		line 35 in file "Display7seg_74HC595.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  D1              1    wreg     unsigned char 
   981 ;;  D2              1    6[COMRAM] unsigned char 
   982 ;;  D3              1    7[COMRAM] unsigned char 
   983 ;;  D4              1    8[COMRAM] unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  D1              1   11[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   995 ;;      Params:         3       0       0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0       0       0
   997 ;;      Temps:          2       0       0       0       0       0       0
   998 ;;      Totals:         6       0       0       0       0       0       0
   999 ;;Total ram usage:        6 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 2
  1002 ;; This function calls:
  1003 ;;		_DISPLAY_Update
  1004 ;; This function is called by:
  1005 ;;		_DISPLAY_Reset
  1006 ;;		_DISPLAY_Write
  1007 ;;		_SYSTEM_Process
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text6
  1012  007DB2                     __ptext6:
  1013                           	callstack 0
  1014  007DB2                     _DISPLAY_Set:
  1015                           	callstack 26
  1016                           
  1017                           ;incstack = 0
  1018                           ;DISPLAY_Set@D1 stored from wreg
  1019  007DB2  6E2D               	movwf	DISPLAY_Set@D1^0,c
  1020  007DB4                     
  1021                           ;Display7seg_74HC595.c: 36:     switch(NUMBERS_OF_DISPLAYS){
  1022  007DB4  EF1C  F03F         	goto	l1020
  1023  007DB8                     l16:
  1024                           
  1025                           ;Display7seg_74HC595.c: 38:             display_values[1]=digits[16];
  1026  007DB8  C011  F03B         	movff	_digits+16,_display_values+1
  1027  007DBC                     
  1028                           ;Display7seg_74HC595.c: 39:             display_values[0]=digits[D1];
  1029  007DBC  0E01               	movlw	low _digits
  1030  007DBE  242D               	addwf	DISPLAY_Set@D1^0,w,c
  1031  007DC0  6ED9               	movwf	fsr2l,c
  1032  007DC2  6ADA               	clrf	fsr2h,c
  1033  007DC4  0E00               	movlw	high _digits
  1034  007DC6  22DA               	addwfc	fsr2h,f,c
  1035  007DC8  50DF               	movf	indf2,w,c
  1036  007DCA  6E3A               	movwf	_display_values^0,c
  1037                           
  1038                           ;Display7seg_74HC595.c: 40:             break;
  1039  007DCC  EF3A  F03F         	goto	l1022
  1040  007DD0                     l1014:
  1041                           
  1042                           ;Display7seg_74HC595.c: 42:             display_values[1]=digits[D1];
  1043  007DD0  0E01               	movlw	low _digits
  1044  007DD2  242D               	addwf	DISPLAY_Set@D1^0,w,c
  1045  007DD4  6ED9               	movwf	fsr2l,c
  1046  007DD6  6ADA               	clrf	fsr2h,c
  1047  007DD8  0E00               	movlw	high _digits
  1048  007DDA  22DA               	addwfc	fsr2h,f,c
  1049  007DDC  50DF               	movf	indf2,w,c
  1050  007DDE  6E3B               	movwf	(_display_values+1)^0,c
  1051                           
  1052                           ;Display7seg_74HC595.c: 43:             display_values[0]=digits[D2];
  1053  007DE0  0E01               	movlw	low _digits
  1054  007DE2  2428               	addwf	DISPLAY_Set@D2^0,w,c
  1055  007DE4  6ED9               	movwf	fsr2l,c
  1056  007DE6  6ADA               	clrf	fsr2h,c
  1057  007DE8  0E00               	movlw	high _digits
  1058  007DEA  22DA               	addwfc	fsr2h,f,c
  1059  007DEC  50DF               	movf	indf2,w,c
  1060  007DEE  6E3A               	movwf	_display_values^0,c
  1061                           
  1062                           ;Display7seg_74HC595.c: 44:             break;
  1063  007DF0  EF3A  F03F         	goto	l1022
  1064  007DF4                     l1016:
  1065                           
  1066                           ;Display7seg_74HC595.c: 48:             display_values[3]=digits[D1];
  1067  007DF4  0E01               	movlw	low _digits
  1068  007DF6  242D               	addwf	DISPLAY_Set@D1^0,w,c
  1069  007DF8  6ED9               	movwf	fsr2l,c
  1070  007DFA  6ADA               	clrf	fsr2h,c
  1071  007DFC  0E00               	movlw	high _digits
  1072  007DFE  22DA               	addwfc	fsr2h,f,c
  1073  007E00  50DF               	movf	indf2,w,c
  1074  007E02  6E3D               	movwf	(_display_values+3)^0,c
  1075                           
  1076                           ;Display7seg_74HC595.c: 49:             display_values[2]=digits[D2];
  1077  007E04  0E01               	movlw	low _digits
  1078  007E06  2428               	addwf	DISPLAY_Set@D2^0,w,c
  1079  007E08  6ED9               	movwf	fsr2l,c
  1080  007E0A  6ADA               	clrf	fsr2h,c
  1081  007E0C  0E00               	movlw	high _digits
  1082  007E0E  22DA               	addwfc	fsr2h,f,c
  1083  007E10  50DF               	movf	indf2,w,c
  1084  007E12  6E3C               	movwf	(_display_values+2)^0,c
  1085                           
  1086                           ;Display7seg_74HC595.c: 50:             display_values[1]=digits[D3];
  1087  007E14  0E01               	movlw	low _digits
  1088  007E16  2429               	addwf	DISPLAY_Set@D3^0,w,c
  1089  007E18  6ED9               	movwf	fsr2l,c
  1090  007E1A  6ADA               	clrf	fsr2h,c
  1091  007E1C  0E00               	movlw	high _digits
  1092  007E1E  22DA               	addwfc	fsr2h,f,c
  1093  007E20  50DF               	movf	indf2,w,c
  1094  007E22  6E3B               	movwf	(_display_values+1)^0,c
  1095                           
  1096                           ;Display7seg_74HC595.c: 51:             display_values[0]=digits[D4];
  1097  007E24  0E01               	movlw	low _digits
  1098  007E26  242A               	addwf	DISPLAY_Set@D4^0,w,c
  1099  007E28  6ED9               	movwf	fsr2l,c
  1100  007E2A  6ADA               	clrf	fsr2h,c
  1101  007E2C  0E00               	movlw	high _digits
  1102  007E2E  22DA               	addwfc	fsr2h,f,c
  1103  007E30  50DF               	movf	indf2,w,c
  1104  007E32  6E3A               	movwf	_display_values^0,c
  1105                           
  1106                           ;Display7seg_74HC595.c: 52:             break;
  1107  007E34  EF3A  F03F         	goto	l1022
  1108  007E38                     l1020:
  1109  007E38  0E04               	movlw	4
  1110  007E3A  6E2B               	movwf	??_DISPLAY_Set^0,c
  1111  007E3C  0E00               	movlw	0
  1112  007E3E  6E2C               	movwf	(??_DISPLAY_Set+1)^0,c
  1113                           
  1114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1115                           ; Switch size 1, requested type "simple"
  1116                           ; Number of cases is 1, Range of values is 0 to 0
  1117                           ; switch strategies available:
  1118                           ; Name         Instructions Cycles
  1119                           ; simple_byte            4     3 (average)
  1120                           ;	Chosen strategy is simple_byte
  1121  007E40  502C               	movf	(??_DISPLAY_Set+1)^0,w,c
  1122  007E42  0A00               	xorlw	0	; case 0
  1123  007E44  B4D8               	btfsc	status,2,c
  1124  007E46  EF27  F03F         	goto	l1140
  1125  007E4A  EF3A  F03F         	goto	l1022
  1126  007E4E                     l1140:
  1127                           
  1128                           ; Switch size 1, requested type "simple"
  1129                           ; Number of cases is 4, Range of values is 1 to 4
  1130                           ; switch strategies available:
  1131                           ; Name         Instructions Cycles
  1132                           ; simple_byte           13     7 (average)
  1133                           ;	Chosen strategy is simple_byte
  1134  007E4E  502B               	movf	??_DISPLAY_Set^0,w,c
  1135  007E50  0A01               	xorlw	1	; case 1
  1136  007E52  B4D8               	btfsc	status,2,c
  1137  007E54  EFDC  F03E         	goto	l16
  1138  007E58  0A03               	xorlw	3	; case 2
  1139  007E5A  B4D8               	btfsc	status,2,c
  1140  007E5C  EFE8  F03E         	goto	l1014
  1141  007E60  0A01               	xorlw	1	; case 3
  1142  007E62  B4D8               	btfsc	status,2,c
  1143  007E64  EF3A  F03F         	goto	l1022
  1144  007E68  0A07               	xorlw	7	; case 4
  1145  007E6A  B4D8               	btfsc	status,2,c
  1146  007E6C  EFFA  F03E         	goto	l1016
  1147  007E70  EF3A  F03F         	goto	l1022
  1148  007E74                     l1022:
  1149                           
  1150                           ;Display7seg_74HC595.c: 56:     DISPLAY_Update();
  1151  007E74  EC6A  F03D         	call	_DISPLAY_Update	;wreg free
  1152  007E78  0012               	return		;funcret
  1153  007E7A                     __end_of_DISPLAY_Set:
  1154                           	callstack 0
  1155                           
  1156 ;; *************** function _SYSTEM_Initialize *****************
  1157 ;; Defined at:
  1158 ;;		line 40 in file "mcu.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         0       0       0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 1
  1179 ;; This function calls:
  1180 ;;		_MCU_Initialize
  1181 ;;		_OSCILLATOR_Initialize
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text7
  1188  007A44                     __ptext7:
  1189                           	callstack 0
  1190  007A44                     _SYSTEM_Initialize:
  1191                           	callstack 29
  1192  007A44                     
  1193                           ;mcu.c: 41:     MCU_Initialize();
  1194  007A44  EC31  F03D         	call	_MCU_Initialize	;wreg free
  1195                           
  1196                           ;mcu.c: 42:     OSCILLATOR_Initialize();
  1197  007A48  EC1F  F03D         	call	_OSCILLATOR_Initialize	;wreg free
  1198  007A4C  0012               	return		;funcret
  1199  007A4E                     __end_of_SYSTEM_Initialize:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _OSCILLATOR_Initialize *****************
  1203 ;; Defined at:
  1204 ;;		line 117 in file "mcu.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1218 ;;      Params:         0       0       0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_SYSTEM_Initialize
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text8
  1232  007A3E                     __ptext8:
  1233                           	callstack 0
  1234  007A3E                     _OSCILLATOR_Initialize:
  1235                           	callstack 29
  1236  007A3E                     
  1237                           ;mcu.c: 119:     OSCCONbits.IRCF=0b111;
  1238  007A3E  0E70               	movlw	112
  1239  007A40  12D3               	iorwf	211,f,c	;volatile
  1240  007A42  0012               	return		;funcret
  1241  007A44                     __end_of_OSCILLATOR_Initialize:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _MCU_Initialize *****************
  1245 ;; Defined at:
  1246 ;;		line 94 in file "mcu.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1260 ;;      Params:         0       0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0       0       0
  1263 ;;      Totals:         0       0       0       0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_SYSTEM_Initialize
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text9
  1274  007A62                     __ptext9:
  1275                           	callstack 0
  1276  007A62                     _MCU_Initialize:
  1277                           	callstack 29
  1278  007A62                     
  1279                           ;mcu.c: 96:     ANSELA = 0;
  1280  007A62  0E00               	movlw	0
  1281  007A64  010F               	movlb	15	; () banked
  1282  007A66  6F38               	movwf	56,b	;volatile
  1283                           
  1284                           ;mcu.c: 97:     ANSELB = 0;
  1285  007A68  0E00               	movlw	0
  1286  007A6A  6F39               	movwf	57,b	;volatile
  1287                           
  1288                           ;mcu.c: 98:     ANSELC = 0;
  1289  007A6C  0E00               	movlw	0
  1290  007A6E  6F3A               	movwf	58,b	;volatile
  1291                           
  1292                           ;mcu.c: 101:     TRISB = 0x00;
  1293  007A70  0E00               	movlw	0
  1294  007A72  6E93               	movwf	147,c	;volatile
  1295                           
  1296                           ;mcu.c: 102:     TRISC = 0x00;
  1297  007A74  0E00               	movlw	0
  1298  007A76  6E94               	movwf	148,c	;volatile
  1299                           
  1300                           ;mcu.c: 104:     PORTB = 0x00;
  1301  007A78  0E00               	movlw	0
  1302  007A7A  6E81               	movwf	129,c	;volatile
  1303                           
  1304                           ;mcu.c: 105:     PORTC = 0x00;
  1305  007A7C  0E00               	movlw	0
  1306  007A7E  6E82               	movwf	130,c	;volatile
  1307  007A80                     
  1308                           ; BSR set to: 15
  1309  007A80  0012               	return		;funcret
  1310  007A82                     __end_of_MCU_Initialize:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _SPONSOR_Welcome *****************
  1314 ;; Defined at:
  1315 ;;		line 73 in file "mcu.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  x               1    8[COMRAM] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1329 ;;      Params:         0       0       0       0       0       0       0
  1330 ;;      Locals:         1       0       0       0       0       0       0
  1331 ;;      Temps:          2       0       0       0       0       0       0
  1332 ;;      Totals:         3       0       0       0       0       0       0
  1333 ;;Total ram usage:        3 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 2
  1336 ;; This function calls:
  1337 ;;		_DISPLAY_Update
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	text10
  1344  007C70                     __ptext10:
  1345                           	callstack 0
  1346  007C70                     _SPONSOR_Welcome:
  1347                           	callstack 28
  1348  007C70                     
  1349                           ;mcu.c: 74:     for(uint8_t x = 0; x<=55; x++){
  1350  007C70  0E00               	movlw	0
  1351  007C72  6E2A               	movwf	SPONSOR_Welcome@x^0,c
  1352  007C74                     l940:
  1353                           
  1354                           ;mcu.c: 75:         display_values[3] = digitsPCBWay[0 + countS];
  1355  007C74  0E12               	movlw	low _digitsPCBWay
  1356  007C76  2440               	addwf	_countS^0,w,c
  1357  007C78  6ED9               	movwf	fsr2l,c
  1358  007C7A  6ADA               	clrf	fsr2h,c
  1359  007C7C  0E00               	movlw	high _digitsPCBWay
  1360  007C7E  22DA               	addwfc	fsr2h,f,c
  1361  007C80  50DF               	movf	indf2,w,c
  1362  007C82  6E3D               	movwf	(_display_values+3)^0,c
  1363                           
  1364                           ;mcu.c: 76:         display_values[2] = digitsPCBWay[1 + countS];
  1365  007C84  0E13               	movlw	low (_digitsPCBWay+1)
  1366  007C86  2440               	addwf	_countS^0,w,c
  1367  007C88  6ED9               	movwf	fsr2l,c
  1368  007C8A  6ADA               	clrf	fsr2h,c
  1369  007C8C  0E00               	movlw	high (_digitsPCBWay+1)
  1370  007C8E  22DA               	addwfc	fsr2h,f,c
  1371  007C90  50DF               	movf	indf2,w,c
  1372  007C92  6E3C               	movwf	(_display_values+2)^0,c
  1373                           
  1374                           ;mcu.c: 77:         display_values[1] = digitsPCBWay[2 + countS];
  1375  007C94  0E14               	movlw	low (_digitsPCBWay+2)
  1376  007C96  2440               	addwf	_countS^0,w,c
  1377  007C98  6ED9               	movwf	fsr2l,c
  1378  007C9A  6ADA               	clrf	fsr2h,c
  1379  007C9C  0E00               	movlw	high (_digitsPCBWay+2)
  1380  007C9E  22DA               	addwfc	fsr2h,f,c
  1381  007CA0  50DF               	movf	indf2,w,c
  1382  007CA2  6E3B               	movwf	(_display_values+1)^0,c
  1383                           
  1384                           ;mcu.c: 78:         display_values[0] = digitsPCBWay[3 + countS];
  1385  007CA4  0E15               	movlw	low (_digitsPCBWay+3)
  1386  007CA6  2440               	addwf	_countS^0,w,c
  1387  007CA8  6ED9               	movwf	fsr2l,c
  1388  007CAA  6ADA               	clrf	fsr2h,c
  1389  007CAC  0E00               	movlw	high (_digitsPCBWay+3)
  1390  007CAE  22DA               	addwfc	fsr2h,f,c
  1391  007CB0  50DF               	movf	indf2,w,c
  1392  007CB2  6E3A               	movwf	_display_values^0,c
  1393  007CB4                     
  1394                           ;mcu.c: 79:         DISPLAY_Update();
  1395  007CB4  EC6A  F03D         	call	_DISPLAY_Update	;wreg free
  1396  007CB8                     
  1397                           ;mcu.c: 80:         countS++;
  1398  007CB8  2A40               	incf	_countS^0,f,c
  1399  007CBA                     
  1400                           ;mcu.c: 81:         if(countS == 11) countS = 0;
  1401  007CBA  0E0B               	movlw	11
  1402  007CBC  1840               	xorwf	_countS^0,w,c
  1403  007CBE  A4D8               	btfss	status,2,c
  1404  007CC0  EF64  F03E         	goto	u141
  1405  007CC4  EF66  F03E         	goto	u140
  1406  007CC8                     u141:
  1407  007CC8  EF68  F03E         	goto	l950
  1408  007CCC                     u140:
  1409  007CCC  0E00               	movlw	0
  1410  007CCE  6E40               	movwf	_countS^0,c
  1411  007CD0                     l950:
  1412                           
  1413                           ;mcu.c: 82:         _delay((unsigned long)((500)*(16000000/4000.0)));
  1414  007CD0  0E0B               	movlw	11
  1415  007CD2  6E29               	movwf	(??_SPONSOR_Welcome+1)^0,c
  1416  007CD4  0E26               	movlw	38
  1417  007CD6  6E28               	movwf	??_SPONSOR_Welcome^0,c
  1418  007CD8  0E5E               	movlw	94
  1419  007CDA                     u327:
  1420  007CDA  2EE8               	decfsz	wreg,f,c
  1421  007CDC  D7FE               	bra	u327
  1422  007CDE  2E28               	decfsz	??_SPONSOR_Welcome^0,f,c
  1423  007CE0  D7FC               	bra	u327
  1424  007CE2  2E29               	decfsz	(??_SPONSOR_Welcome+1)^0,f,c
  1425  007CE4  D7FA               	bra	u327
  1426  007CE6                     
  1427                           ;mcu.c: 83:     }
  1428  007CE6  2A2A               	incf	SPONSOR_Welcome@x^0,f,c
  1429  007CE8  0E37               	movlw	55
  1430  007CEA  642A               	cpfsgt	SPONSOR_Welcome@x^0,c
  1431  007CEC  EF7A  F03E         	goto	u151
  1432  007CF0  EF7C  F03E         	goto	u150
  1433  007CF4                     u151:
  1434  007CF4  EF3A  F03E         	goto	l940
  1435  007CF8                     u150:
  1436  007CF8  0012               	return		;funcret
  1437  007CFA                     __end_of_SPONSOR_Welcome:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _DISPLAY_Update *****************
  1441 ;; Defined at:
  1442 ;;		line 114 in file "Display7seg_74HC595.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  i               1    0        char 
  1447 ;;  i               1    5[COMRAM] char 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1457 ;;      Params:         0       0       0       0       0       0       0
  1458 ;;      Locals:         1       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0
  1460 ;;      Totals:         1       0       0       0       0       0       0
  1461 ;;Total ram usage:        1 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 1
  1464 ;; This function calls:
  1465 ;;		_DRIVER_74HC595_ShiftOut
  1466 ;; This function is called by:
  1467 ;;		_DISPLAY_Set
  1468 ;;		_SPONSOR_Welcome
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text11
  1473  007AD4                     __ptext11:
  1474                           	callstack 0
  1475  007AD4                     _DISPLAY_Update:
  1476                           	callstack 26
  1477  007AD4                     
  1478                           ;Display7seg_74HC595.c: 116:         for (int8_t i=0; i<NUMBERS_OF_DISPLAYS; i++){
  1479  007AD4  0E00               	movlw	0
  1480  007AD6  6E27               	movwf	DISPLAY_Update@i^0,c
  1481  007AD8  EF78  F03D         	goto	l842
  1482  007ADC                     l838:
  1483                           
  1484                           ;Display7seg_74HC595.c: 117:             DRIVER_74HC595_ShiftOut(display_values[i]);
  1485  007ADC  0E3A               	movlw	low _display_values
  1486  007ADE  2427               	addwf	DISPLAY_Update@i^0,w,c
  1487  007AE0  6ED9               	movwf	fsr2l,c
  1488  007AE2  6ADA               	clrf	fsr2h,c
  1489  007AE4  0E00               	movlw	high _display_values
  1490  007AE6  22DA               	addwfc	fsr2h,f,c
  1491  007AE8  50DF               	movf	indf2,w,c
  1492  007AEA  ECA0  F03D         	call	_DRIVER_74HC595_ShiftOut
  1493  007AEE                     
  1494                           ;Display7seg_74HC595.c: 118:         }
  1495  007AEE  2A27               	incf	DISPLAY_Update@i^0,f,c
  1496  007AF0                     l842:
  1497  007AF0  5027               	movf	DISPLAY_Update@i^0,w,c
  1498  007AF2  0A80               	xorlw	128
  1499  007AF4  0F7C               	addlw	-132
  1500  007AF6  A0D8               	btfss	status,0,c
  1501  007AF8  EF80  F03D         	goto	u41
  1502  007AFC  EF82  F03D         	goto	u40
  1503  007B00                     u41:
  1504  007B00  EF6E  F03D         	goto	l838
  1505  007B04                     u40:
  1506  007B04  828A               	bsf	138,1,c	;volatile
  1507  007B06  928A               	bcf	138,1,c	;volatile
  1508  007B08  0012               	return		;funcret
  1509  007B0A                     __end_of_DISPLAY_Update:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _DRIVER_74HC595_ShiftOut *****************
  1513 ;; Defined at:
  1514 ;;		line 138 in file "Display7seg_74HC595.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  data            1    wreg     unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  data            1    3[COMRAM] unsigned char 
  1519 ;;  i               1    4[COMRAM] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1529 ;;      Params:         0       0       0       0       0       0       0
  1530 ;;      Locals:         2       0       0       0       0       0       0
  1531 ;;      Temps:          3       0       0       0       0       0       0
  1532 ;;      Totals:         5       0       0       0       0       0       0
  1533 ;;Total ram usage:        5 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; This function calls:
  1536 ;;		Nothing
  1537 ;; This function is called by:
  1538 ;;		_DISPLAY_Update
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text12
  1543  007B40                     __ptext12:
  1544                           	callstack 0
  1545  007B40                     _DRIVER_74HC595_ShiftOut:
  1546                           	callstack 26
  1547                           
  1548                           ;incstack = 0
  1549                           ;DRIVER_74HC595_ShiftOut@data stored from wreg
  1550  007B40  6E25               	movwf	DRIVER_74HC595_ShiftOut@data^0,c
  1551  007B42                     
  1552                           ;Display7seg_74HC595.c: 140:     for (uint8_t i=0; i<8; i++){
  1553  007B42  0E00               	movlw	0
  1554  007B44  6E26               	movwf	DRIVER_74HC595_ShiftOut@i^0,c
  1555  007B46                     l830:
  1556                           
  1557                           ;Display7seg_74HC595.c: 141:         if (data & (0x80>>i)){
  1558  007B46  C026  F022         	movff	DRIVER_74HC595_ShiftOut@i,??_DRIVER_74HC595_ShiftOut
  1559  007B4A  0E80               	movlw	128
  1560  007B4C  6E23               	movwf	(??_DRIVER_74HC595_ShiftOut+1)^0,c
  1561  007B4E  0E00               	movlw	0
  1562  007B50  6E24               	movwf	(??_DRIVER_74HC595_ShiftOut+2)^0,c
  1563  007B52  2A22               	incf	??_DRIVER_74HC595_ShiftOut^0,f,c
  1564  007B54  EFAF  F03D         	goto	u14
  1565  007B58                     u15:
  1566  007B58  3424               	rlcf	(??_DRIVER_74HC595_ShiftOut+2)^0,w,c
  1567  007B5A  3224               	rrcf	(??_DRIVER_74HC595_ShiftOut+2)^0,f,c
  1568  007B5C  3223               	rrcf	(??_DRIVER_74HC595_ShiftOut+1)^0,f,c
  1569  007B5E                     u14:
  1570  007B5E  2E22               	decfsz	??_DRIVER_74HC595_ShiftOut^0,f,c
  1571  007B60  EFAC  F03D         	goto	u15
  1572  007B64  5023               	movf	(??_DRIVER_74HC595_ShiftOut+1)^0,w,c
  1573  007B66  1425               	andwf	DRIVER_74HC595_ShiftOut@data^0,w,c
  1574  007B68  0900               	iorlw	0
  1575  007B6A  B4D8               	btfsc	status,2,c
  1576  007B6C  EFBA  F03D         	goto	u21
  1577  007B70  EFBC  F03D         	goto	u20
  1578  007B74                     u21:
  1579  007B74  EFBF  F03D         	goto	l58
  1580  007B78                     u20:
  1581  007B78  808A               	bsf	138,0,c	;volatile
  1582  007B7A  EFC0  F03D         	goto	l60
  1583  007B7E                     l58:
  1584  007B7E  908A               	bcf	138,0,c	;volatile
  1585  007B80                     l60:
  1586  007B80  848A               	bsf	138,2,c	;volatile
  1587  007B82  948A               	bcf	138,2,c	;volatile
  1588  007B84                     
  1589                           ;Display7seg_74HC595.c: 150:     }
  1590  007B84  2A26               	incf	DRIVER_74HC595_ShiftOut@i^0,f,c
  1591  007B86  0E07               	movlw	7
  1592  007B88  6426               	cpfsgt	DRIVER_74HC595_ShiftOut@i^0,c
  1593  007B8A  EFC9  F03D         	goto	u31
  1594  007B8E  EFCB  F03D         	goto	u30
  1595  007B92                     u31:
  1596  007B92  EFA3  F03D         	goto	l830
  1597  007B96                     u30:
  1598  007B96  0012               	return		;funcret
  1599  007B98                     __end_of_DRIVER_74HC595_ShiftOut:
  1600                           	callstack 0
  1601  0000                     
  1602                           	psect	rparam
  1603  0000                     
  1604                           	psect	idloc
  1605                           
  1606                           ;Config register IDLOC0 @ 0x200000
  1607                           ;	unspecified, using default values
  1608  200000                     	org	2097152
  1609  200000  FF                 	db	255
  1610                           
  1611                           ;Config register IDLOC1 @ 0x200001
  1612                           ;	unspecified, using default values
  1613  200001                     	org	2097153
  1614  200001  FF                 	db	255
  1615                           
  1616                           ;Config register IDLOC2 @ 0x200002
  1617                           ;	unspecified, using default values
  1618  200002                     	org	2097154
  1619  200002  FF                 	db	255
  1620                           
  1621                           ;Config register IDLOC3 @ 0x200003
  1622                           ;	unspecified, using default values
  1623  200003                     	org	2097155
  1624  200003  FF                 	db	255
  1625                           
  1626                           ;Config register IDLOC4 @ 0x200004
  1627                           ;	unspecified, using default values
  1628  200004                     	org	2097156
  1629  200004  FF                 	db	255
  1630                           
  1631                           ;Config register IDLOC5 @ 0x200005
  1632                           ;	unspecified, using default values
  1633  200005                     	org	2097157
  1634  200005  FF                 	db	255
  1635                           
  1636                           ;Config register IDLOC6 @ 0x200006
  1637                           ;	unspecified, using default values
  1638  200006                     	org	2097158
  1639  200006  FF                 	db	255
  1640                           
  1641                           ;Config register IDLOC7 @ 0x200007
  1642                           ;	unspecified, using default values
  1643  200007                     	org	2097159
  1644  200007  FF                 	db	255
  1645                           
  1646                           	psect	config
  1647                           
  1648                           ; Padding undefined space
  1649  300000                     	org	3145728
  1650  300000  FF                 	db	255
  1651                           
  1652                           ;Config register CONFIG1H @ 0x300001
  1653                           ;	Oscillator Selection bits
  1654                           ;	FOSC = INTIO67, Internal oscillator block
  1655                           ;	4X PLL Enable
  1656                           ;	PLLCFG = OFF, Oscillator used directly
  1657                           ;	Primary clock enable bit
  1658                           ;	PRICLKEN = ON, Primary clock enabled
  1659                           ;	Fail-Safe Clock Monitor Enable bit
  1660                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1661                           ;	Internal/External Oscillator Switchover bit
  1662                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1663  300001                     	org	3145729
  1664  300001  28                 	db	40
  1665                           
  1666                           ;Config register CONFIG2L @ 0x300002
  1667                           ;	Power-up Timer Enable bit
  1668                           ;	PWRTEN = OFF, Power up timer disabled
  1669                           ;	Brown-out Reset Enable bits
  1670                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1671                           ;	Brown Out Reset Voltage bits
  1672                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1673  300002                     	org	3145730
  1674  300002  19                 	db	25
  1675                           
  1676                           ;Config register CONFIG2H @ 0x300003
  1677                           ;	Watchdog Timer Enable bits
  1678                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1679                           ;	Watchdog Timer Postscale Select bits
  1680                           ;	WDTPS = 32768, 1:32768
  1681  300003                     	org	3145731
  1682  300003  3C                 	db	60
  1683                           
  1684                           ; Padding undefined space
  1685  300004                     	org	3145732
  1686  300004  FF                 	db	255
  1687                           
  1688                           ;Config register CONFIG3H @ 0x300005
  1689                           ;	CCP2 MUX bit
  1690                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1691                           ;	PORTB A/D Enable bit
  1692                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1693                           ;	P3A/CCP3 Mux bit
  1694                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1695                           ;	HFINTOSC Fast Start-up
  1696                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  1697                           ;	Timer3 Clock input mux bit
  1698                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1699                           ;	ECCP2 B output mux bit
  1700                           ;	P2BMX = PORTB5, P2B is on RB5
  1701                           ;	MCLR Pin Enable bit
  1702                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1703  300005                     	org	3145733
  1704  300005  B5                 	db	181
  1705                           
  1706                           ;Config register CONFIG4L @ 0x300006
  1707                           ;	Stack Full/Underflow Reset Enable bit
  1708                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1709                           ;	Single-Supply ICSP Enable bit
  1710                           ;	LVP = OFF, Single-Supply ICSP disabled
  1711                           ;	Extended Instruction Set Enable bit
  1712                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1713                           ;	Background Debug
  1714                           ;	DEBUG = 0x1, unprogrammed default
  1715  300006                     	org	3145734
  1716  300006  81                 	db	129
  1717                           
  1718                           ; Padding undefined space
  1719  300007                     	org	3145735
  1720  300007  FF                 	db	255
  1721                           
  1722                           ;Config register CONFIG5L @ 0x300008
  1723                           ;	Code Protection Block 0
  1724                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1725                           ;	Code Protection Block 1
  1726                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1727                           ;	Code Protection Block 2
  1728                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1729                           ;	Code Protection Block 3
  1730                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1731  300008                     	org	3145736
  1732  300008  0F                 	db	15
  1733                           
  1734                           ;Config register CONFIG5H @ 0x300009
  1735                           ;	Boot Block Code Protection bit
  1736                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1737                           ;	Data EEPROM Code Protection bit
  1738                           ;	CPD = OFF, Data EEPROM not code-protected
  1739  300009                     	org	3145737
  1740  300009  C0                 	db	192
  1741                           
  1742                           ;Config register CONFIG6L @ 0x30000A
  1743                           ;	Write Protection Block 0
  1744                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1745                           ;	Write Protection Block 1
  1746                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1747                           ;	Write Protection Block 2
  1748                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1749                           ;	Write Protection Block 3
  1750                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1751  30000A                     	org	3145738
  1752  30000A  0F                 	db	15
  1753                           
  1754                           ;Config register CONFIG6H @ 0x30000B
  1755                           ;	Configuration Register Write Protection bit
  1756                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1757                           ;	Boot Block Write Protection bit
  1758                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1759                           ;	Data EEPROM Write Protection bit
  1760                           ;	WRTD = OFF, Data EEPROM not write-protected
  1761  30000B                     	org	3145739
  1762  30000B  E0                 	db	224
  1763                           
  1764                           ;Config register CONFIG7L @ 0x30000C
  1765                           ;	Table Read Protection Block 0
  1766                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1767                           ;	Table Read Protection Block 1
  1768                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1769                           ;	Table Read Protection Block 2
  1770                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1771                           ;	Table Read Protection Block 3
  1772                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1773  30000C                     	org	3145740
  1774  30000C  0F                 	db	15
  1775                           
  1776                           ;Config register CONFIG7H @ 0x30000D
  1777                           ;	Boot Block Table Read Protection bit
  1778                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1779  30000D                     	org	3145741
  1780  30000D  40                 	db	64
  1781                           tosu	equ	0xFFF
  1782                           tosh	equ	0xFFE
  1783                           tosl	equ	0xFFD
  1784                           stkptr	equ	0xFFC
  1785                           pclatu	equ	0xFFB
  1786                           pclath	equ	0xFFA
  1787                           pcl	equ	0xFF9
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           prodh	equ	0xFF4
  1793                           prodl	equ	0xFF3
  1794                           indf0	equ	0xFEF
  1795                           postinc0	equ	0xFEE
  1796                           postdec0	equ	0xFED
  1797                           preinc0	equ	0xFEC
  1798                           plusw0	equ	0xFEB
  1799                           fsr0h	equ	0xFEA
  1800                           fsr0l	equ	0xFE9
  1801                           wreg	equ	0xFE8
  1802                           indf1	equ	0xFE7
  1803                           postinc1	equ	0xFE6
  1804                           postdec1	equ	0xFE5
  1805                           preinc1	equ	0xFE4
  1806                           plusw1	equ	0xFE3
  1807                           fsr1h	equ	0xFE2
  1808                           fsr1l	equ	0xFE1
  1809                           bsr	equ	0xFE0
  1810                           indf2	equ	0xFDF
  1811                           postinc2	equ	0xFDE
  1812                           postdec2	equ	0xFDD
  1813                           preinc2	equ	0xFDC
  1814                           plusw2	equ	0xFDB
  1815                           fsr2h	equ	0xFDA
  1816                           fsr2l	equ	0xFD9
  1817                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        33
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SYSTEM_Process
    _SYSTEM_Process->_DISPLAY_Write
    _DISPLAY_Write->_DISPLAY_Set
    _DISPLAY_Write->___lwdiv
    ___lwdiv->___lwmod
    _DISPLAY_Reset->_DISPLAY_Set
    _DISPLAY_Set->_DISPLAY_Update
    _SPONSOR_Welcome->_DISPLAY_Update
    _DISPLAY_Update->_DRIVER_74HC595_ShiftOut

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7571
                                             22 COMRAM     2     2      0
                      _DISPLAY_Reset
                    _SPONSOR_Welcome
                  _SYSTEM_Initialize
                     _SYSTEM_Process
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Process                                       4     4      0    6235
                                             18 COMRAM     4     4      0
                      _DISPLAY_Reset
                        _DISPLAY_Set
                      _DISPLAY_Write
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_Write                                        6     4      2    3795
                                             12 COMRAM     6     4      2
                        _DISPLAY_Set
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1071
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1074
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _DISPLAY_Reset                                        0     0      0    1186
                        _DISPLAY_Set
 ---------------------------------------------------------------------------------
 (3) _DISPLAY_Set                                          6     3      3    1186
                                              6 COMRAM     6     3      3
                     _DISPLAY_Update
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _MCU_Initialize
              _OSCILLATOR_Initialize
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MCU_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPONSOR_Welcome                                      3     3      0     150
                                              6 COMRAM     3     3      0
                     _DISPLAY_Update
 ---------------------------------------------------------------------------------
 (4) _DISPLAY_Update                                       2     2      0     120
                                              5 COMRAM     1     1      0
            _DRIVER_74HC595_ShiftOut
 ---------------------------------------------------------------------------------
 (5) _DRIVER_74HC595_ShiftOut                              5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DISPLAY_Reset
     _DISPLAY_Set
       _DISPLAY_Update
         _DRIVER_74HC595_ShiftOut
   _SPONSOR_Welcome
     _DISPLAY_Update
   _SYSTEM_Initialize
     _MCU_Initialize
     _OSCILLATOR_Initialize
   _SYSTEM_Process
     _DISPLAY_Reset
     _DISPLAY_Set
     _DISPLAY_Write
       _DISPLAY_Set
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      40       1       67.4%
BITBIGSFRll         46      0       0      19        0.0%
BITBIGSFRhhl        3E      0       0      16        0.0%
BITBIGSFRhhh        2C      0       0      15        0.0%
BITBIGSFRhl          8      0       0      17        0.0%
BITBIGSFRlh          7      0       0      18        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      20        0.0%
DATA                 0      0      40      22        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat Jun 24 19:15:47 2023

                             l22 7E78                               l16 7DB8  
                             l25 7A60                               l34 7FFE  
                             l60 7B80                               l45 7B04  
                             l62 7B82                               l55 7B78  
                             l47 7B06                               l64 7B96  
                             l49 7B08                               l58 7B7E  
                             u20 7B78                               u21 7B74  
                             u30 7B96                               u14 7B5E  
                             u31 7B92                               u15 7B58  
                             u40 7B04                               u41 7B00  
               DISPLAY_Write@num 002E                              l131 7A4C  
                            l142 7CF8                              l136 7DB0  
                            l145 7A80                              l148 7A42  
                            l642 7C66                              l652 7BF2  
                            l830 7B46                              l832 7B84  
                            l824 7B42                              l840 7AEE  
                            l649 7C6E                              l834 7B86  
                            l842 7AF0                              l930 7A3E  
                            l659 7BFA                              l836 7AD4  
                            l940 7C74                              l932 7A44  
                            l838 7ADC                              l950 7CD0  
                            l942 7CB4                              l934 7C70  
                            l952 7CE6                              l944 7CB8  
                            l928 7A62                              l954 7CE8  
                            l946 7CBA                              l948 7CCC  
                            u200 7BAA                              u201 7BA6  
                            u210 7BC8                              u211 7BC4  
                            u140 7CCC                              u220 7BDE  
                            u141 7CC8                              u221 7BDA  
                            u150 7CF8                              u230 7E9C  
                            u151 7CF4                              u231 7E98  
                            u240 7EBA                              u241 7EB6  
                            u170 7C16                              u250 7F04  
                            u171 7C12                              u251 7F00  
                            u307 7D5C                              u180 7C34  
                            u260 7DB0                              u181 7C30  
                            u261 7DAC                              u317 7D88  
                            u190 7C50                              u327 7CDA  
                            u191 7C4C                              u277 7AB6  
                            u287 7D08                              u297 7D32  
                            wreg 000FE8                             l1010 7DB4  
                           l1012 7DBC                             l1020 7E38  
                           l1014 7DD0                             l1022 7E74  
                           l1030 7C04                             l1102 7D72  
                           l1110 7AA4                             l1016 7DF4  
                           l1040 7C3A                             l1032 7C16  
                           l1104 7D7E                             l1112 7AA8  
                           l1042 7C50                             l1034 7C1E  
                           l1050 7B98                             l1106 7D96  
                           l1114 7AAC                             l1140 7E4E  
                           l1044 7C58                             l1036 7C26  
                           l1028 7BFC                             l1060 7BDE  
                           l1052 7BAA                             l1108 7D9A  
                           l1116 7AC4                             l1046 7C5A  
                           l1038 7C34                             l1062 7BE6  
                           l1054 7BB2                             l1070 7E86  
                           l1118 7AC8                             l1048 7C60  
                           l1064 7BEC                             l1056 7BBA  
                           l1080 7F04                             l1072 7E9C  
                           l1066 7A4E                             l1058 7BC8  
                           l1082 7F64                             l1074 7EA4  
                           l1090 7D16                             l1076 7EBA  
                           l1084 7FEC                             l1068 7E7A  
                           l1092 7D40                             l1078 7EEE  
                           l1094 7D52                             l1086 7CFA  
                           l1096 7D6A                             l1088 7CFE  
                           _main 7AA4                             indf2 000FDF  
                           fsr1l 000FE1                             fsr2l 000FD9  
                           start 0000                     ___param_bank 000000  
  __end_of_OSCILLATOR_Initialize 7A44                            ?_main 0022  
                __end_of___lwdiv 7C70                  __end_of___lwmod 7BFC  
                          _PORTB 000F81                            _PORTC 000F82  
                          _TRISB 000F93                            _TRISC 000F94  
               ??_MCU_Initialize 0022              DISPLAY_Write@digit1 0030  
            DISPLAY_Write@digit2 0031              DISPLAY_Write@digit3 0032  
            DISPLAY_Write@digit4 0033                            tablat 000FF5  
                          status 000FD8                  __initialization 7B0A  
                   __end_of_main 7AD4                           ??_main 0038  
                  __activetblptr 000002                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
       DRIVER_74HC595_ShiftOut@i 0026            __end_of_DISPLAY_Reset 7A62  
          __end_of_DISPLAY_Write 8000                           _digits 0001  
                      ??___lwdiv 002B                        ??___lwmod 0026  
                         _countS 0040                           clear_0 7B30  
                         isa$std 000001                     __pdataCOMRAM 0001  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                  SYSTEM_Process@i 0036  
              _SYSTEM_Initialize 7A44                       __accesstop 0060  
        __end_of__initialization 7B36               ?_SYSTEM_Initialize 0022  
                  ___rparam_used 000001                   __pcstackCOMRAM 0022  
            ??_SYSTEM_Initialize 0022         ?_DRIVER_74HC595_ShiftOut 0022  
      __end_of_SYSTEM_Initialize 7A4E                ??_SPONSOR_Welcome 0028  
                 _DISPLAY_Update 7AD4                     _digitsPCBWay 0012  
                        __Hparam 0000                          __Lparam 0000  
__end_of_DRIVER_74HC595_ShiftOut 7B98                          ___lwdiv 7BFC  
                        ___lwmod 7B98           __end_of_DISPLAY_Update 7B0A  
                        __pcinit 7B0A                          __ramtop 0600  
                        __ptext0 7AA4                          __ptext1 7CFA  
                        __ptext2 7E7A                          __ptext3 7B98  
                        __ptext4 7BFC                          __ptext5 7A4E  
                        __ptext6 7DB2                          __ptext7 7A44  
                        __ptext8 7A3E                          __ptext9 7A62  
          _OSCILLATOR_Initialize 7A3E             end_of_initialization 7B36  
                  __Lmediumconst 0000                    ??_DISPLAY_Set 002B  
                        postdec1 000FE5                          postinc0 000FEE  
                ?_DISPLAY_Update 0022                  DISPLAY_Update@i 0027  
               SPONSOR_Welcome@x 002A                   _SYSTEM_Process 7CFA  
                  __pidataCOMRAM 7A83              __end_of_DISPLAY_Set 7E7A  
         ?_OSCILLATOR_Initialize 0022              start_initialization 7B0A  
                _SPONSOR_Welcome 7C70           __end_of_SYSTEM_Process 7DB2  
                  DISPLAY_Set@D1 002D                    DISPLAY_Set@D2 0028  
                  DISPLAY_Set@D3 0029                    DISPLAY_Set@D4 002A  
                    __pbssCOMRAM 003A                 ___lwdiv@dividend 0027  
                ?_SYSTEM_Process 0022                      _DISPLAY_Set 7DB2  
                  _DISPLAY_Reset 7A4E                         ?___lwdiv 0027  
                       ?___lwmod 0022                    _DISPLAY_Write 7E7A  
        __end_of_SPONSOR_Welcome 7CFA                 ___lwdiv@quotient 002B  
                 _MCU_Initialize 7A62                         _LATBbits 000F8A  
               ??_DISPLAY_Update 0027                   ?_DISPLAY_Reset 0022  
                 ?_DISPLAY_Write 002E          _DRIVER_74HC595_ShiftOut 7B40  
                      copy_data0 7B1E           __end_of_MCU_Initialize 7A82  
                       __Hrparam 0000                         __Lrparam 0000  
        ??_OSCILLATOR_Initialize 0022                  ___lwdiv@divisor 0029  
                ___lwdiv@counter 002D                         __ptext10 7C70  
                       __ptext11 7AD4                         __ptext12 7B40  
               ?_SPONSOR_Welcome 0022                  ?_MCU_Initialize 0022  
                ??_DISPLAY_Reset 002E                  ??_DISPLAY_Write 0030  
                       isa$xinst 000000        ??_DRIVER_74HC595_ShiftOut 0022  
               ??_SYSTEM_Process 0034                 ___lwmod@dividend 0022  
    DRIVER_74HC595_ShiftOut@data 0025                       _OSCCONbits 000FD3  
                   ?_DISPLAY_Set 0028                  ___lwmod@divisor 0024  
                ___lwmod@counter 0026                   _display_values 003A  
            _NUMBERS_OF_DISPLAYS 0021  
