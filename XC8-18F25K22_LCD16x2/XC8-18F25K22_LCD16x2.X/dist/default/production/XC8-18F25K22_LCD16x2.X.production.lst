

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Sep 18 00:23:43 2025

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.35
    28                           ; Generated 05/05/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F25K22 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000C60                     __pidataCOMRAM:
    65                           	callstack 0
    66                           
    67                           ;initializer for _text_2
    68  000C60  68                 	db	104
    69  000C61  74                 	db	116
    70  000C62  74                 	db	116
    71  000C63  70                 	db	112
    72  000C64  3A                 	db	58
    73  000C65  2F                 	db	47
    74  000C66  2F                 	db	47
    75  000C67  6D                 	db	109
    76  000C68  72                 	db	114
    77  000C69  63                 	db	99
    78  000C6A  68                 	db	104
    79  000C6B  75                 	db	117
    80  000C6C  6E                 	db	110
    81  000C6D  63                 	db	99
    82  000C6E  6B                 	db	107
    83  000C6F  75                 	db	117
    84  000C70  65                 	db	101
    85  000C71  65                 	db	101
    86  000C72  2E                 	db	46
    87  000C73  62                 	db	98
    88  000C74  6C                 	db	108
    89  000C75  6F                 	db	111
    90  000C76  67                 	db	103
    91  000C77  73                 	db	115
    92  000C78  70                 	db	112
    93  000C79  6F                 	db	111
    94  000C7A  74                 	db	116
    95  000C7B  2E                 	db	46
    96  000C7C  63                 	db	99
    97  000C7D  6F                 	db	111
    98  000C7E  6D                 	db	109
    99  000C7F  2F                 	db	47
   100  000C80  00                 	db	0
   101                           
   102                           ;initializer for _text_1
   103  000C81  20                 	db	32
   104  000C82  20                 	db	32
   105  000C83  4D                 	db	77
   106  000C84  72                 	db	114
   107  000C85  43                 	db	67
   108  000C86  68                 	db	104
   109  000C87  75                 	db	117
   110  000C88  6E                 	db	110
   111  000C89  63                 	db	99
   112  000C8A  6B                 	db	107
   113  000C8B  75                 	db	117
   114  000C8C  65                 	db	101
   115  000C8D  65                 	db	101
   116  000C8E  21                 	db	33
   117  000C8F  20                 	db	32
   118  000C90  20                 	db	32
   119  000C91  00                 	db	0
   120                           
   121                           ;initializer for main@F6093
   122  000C92  81                 	db	129
   123  000C93  0F                 	db	15
   124  000C94  08                 	db	8
   125  000C95  2C                 	db	44
   126  000C96  3E                 	db	62
   127  0000                     _TRISCbits	set	3988
   128  0000                     _PORTCbits	set	3970
   129  0000                     _ANSELC	set	3898
   130  0000                     _ANSELB	set	3897
   131  0000                     _ANSELA	set	3896
   132  0000                     _PORTA	set	3968
   133  0000                     _PORTC	set	3970
   134  0000                     _TRISA	set	3986
   135  0000                     _PORTB	set	3969
   136  0000                     _RCONbits	set	4048
   137  0000                     _OSCCONbits	set	4051
   138  0000                     _TMR0L	set	4054
   139  0000                     _TMR0H	set	4055
   140  0000                     _INTCONbits	set	4082
   141  0000                     _TRISC	set	3988
   142  0000                     _TRISB	set	3987
   143  0000                     _INTCON2bits	set	4081
   144  0000                     _T0CONbits	set	4053
   145                           
   146                           	psect	smallconst
   147  000600                     __psmallconst:
   148                           	callstack 0
   149  000600  00                 	db	0
   150  000601                     STR_1:
   151  000601  20                 	db	32
   152  000602  4C                 	db	76	;'L'
   153  000603  43                 	db	67	;'C'
   154  000604  44                 	db	68	;'D'
   155  000605  20                 	db	32
   156  000606  31                 	db	49	;'1'
   157  000607  36                 	db	54	;'6'
   158  000608  78                 	db	120	;'x'
   159  000609  32                 	db	50	;'2'
   160  00060A  20                 	db	32
   161  00060B  26                 	db	38
   162  00060C  20                 	db	32
   163  00060D  58                 	db	88	;'X'
   164  00060E  43                 	db	67	;'C'
   165  00060F  38                 	db	56	;'8'
   166  000610  20                 	db	32
   167  000611  00                 	db	0
   168  000612  00                 	db	0	; dummy byte at the end
   169  0000                     
   170                           ; #config settings
   171                           
   172                           	psect	cinit
   173  000BEA                     __pcinit:
   174                           	callstack 0
   175  000BEA                     start_initialization:
   176                           	callstack 0
   177  000BEA                     __initialization:
   178                           	callstack 0
   179                           
   180                           ; Initialize objects allocated to COMRAM (55 bytes)
   181                           ; load TBLPTR registers with __pidataCOMRAM
   182  000BEA  0E60               	movlw	low __pidataCOMRAM
   183  000BEC  6EF6               	movwf	tblptrl,c
   184  000BEE  0E0C               	movlw	high __pidataCOMRAM
   185  000BF0  6EF7               	movwf	tblptrh,c
   186  000BF2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   187  000BF4  6EF8               	movwf	tblptru,c
   188  000BF6  EE00  F001         	lfsr	0,__pdataCOMRAM
   189  000BFA  EE10 F037          	lfsr	1,55
   190  000BFE                     copy_data0:
   191  000BFE  0009               	tblrd		*+
   192  000C00  CFF5 FFEE          	movff	tablat,postinc0
   193  000C04  50E5               	movf	postdec1,w,c
   194  000C06  50E1               	movf	fsr1l,w,c
   195  000C08  E1FA               	bnz	copy_data0
   196                           
   197                           ; Clear objects allocated to COMRAM (7 bytes)
   198  000C0A  EE00  F04F         	lfsr	0,__pbssCOMRAM
   199  000C0E  0E07               	movlw	7
   200  000C10                     clear_0:
   201  000C10  6AEE               	clrf	postinc0,c
   202  000C12  06E8               	decf	wreg,f,c
   203  000C14  E1FD               	bnz	clear_0
   204  000C16                     end_of_initialization:
   205                           	callstack 0
   206  000C16                     __end_of__initialization:
   207                           	callstack 0
   208  000C16  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209  000C18  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210  000C1A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   211  000C1C  6EF8               	movwf	tblptru,c
   212  000C1E  0E06               	movlw	high __Lsmallconst
   213  000C20  6EF7               	movwf	tblptrh,c
   214  000C22  0100               	movlb	0
   215  000C24  EFDC  F003         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218  00004F                     __pbssCOMRAM:
   219                           	callstack 0
   220  00004F                     _lcd:
   221                           	callstack 0
   222  00004F                     	ds	5
   223  000054                     _RTCC_Count:
   224                           	callstack 0
   225  000054                     	ds	2
   226                           
   227                           	psect	dataCOMRAM
   228  000001                     __pdataCOMRAM:
   229                           	callstack 0
   230  000001                     _text_2:
   231                           	callstack 0
   232  000001                     	ds	33
   233  000022                     _text_1:
   234                           	callstack 0
   235  000022                     	ds	17
   236  000033                     main@F6093:
   237                           	callstack 0
   238  000033                     	ds	5
   239                           
   240                           	psect	cstackCOMRAM
   241  000038                     __pcstackCOMRAM:
   242                           	callstack 0
   243  000038                     ??_LCD_Out:
   244  000038                     MCU_Delayms@time:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x0
   248  000038                     	ds	2
   249  00003A                     ??_MCU_Delayms:
   250                           
   251                           ; 1 bytes @ 0x2
   252  00003A                     	ds	1
   253  00003B                     LCD_Out@c:
   254                           	callstack 0
   255  00003B                     MCU_Delayms@acc:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0x3
   259  00003B                     	ds	1
   260  00003C                     ??_LCD_Write:
   261  00003C                     ??_LCD_putc:
   262                           
   263                           ; 1 bytes @ 0x4
   264  00003C                     	ds	3
   265  00003F                     LCD_Write@c:
   266                           	callstack 0
   267  00003F                     LCD_putc@c:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x7
   271  00003F                     	ds	1
   272  000040                     LCD_putrs@a:
   273                           	callstack 0
   274  000040                     LCD_Init@display:
   275                           	callstack 0
   276                           
   277                           ; 5 bytes @ 0x8
   278  000040                     	ds	2
   279  000042                     ??_LCD_putrs:
   280                           
   281                           ; 1 bytes @ 0xA
   282  000042                     	ds	2
   283  000044                     LCD_putrs@i:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0xC
   287  000044                     	ds	1
   288  000045                     ??_LCD_Init:
   289                           
   290                           ; 1 bytes @ 0xD
   291  000045                     	ds	1
   292  000046                     LCD_Init@cmd:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0xE
   296  000046                     	ds	1
   297  000047                     main@lcd:
   298                           	callstack 0
   299                           
   300                           ; 5 bytes @ 0xF
   301  000047                     	ds	5
   302  00004C                     main@c:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x14
   306  00004C                     	ds	1
   307  00004D                     main@c_549:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x15
   311  00004D                     	ds	1
   312  00004E                     main@c_550:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x16
   316  00004E                     	ds	1
   317                           
   318 ;;
   319 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   320 ;;
   321 ;; *************** function _main *****************
   322 ;; Defined at:
   323 ;;		line 54 in file "main.c"
   324 ;; Parameters:    Size  Location     Type
   325 ;;		None
   326 ;; Auto vars:     Size  Location     Type
   327 ;;  c               1   22[COMRAM] unsigned char 
   328 ;;  c               1   21[COMRAM] unsigned char 
   329 ;;  c               1   20[COMRAM] unsigned char 
   330 ;;  lcd             5   15[COMRAM] struct .
   331 ;; Return value:  Size  Location     Type
   332 ;;                  2  126[None  ] int 
   333 ;; Registers used:
   334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   335 ;; Tracked objects:
   336 ;;		On entry : 0/0
   337 ;;		On exit  : 0/0
   338 ;;		Unchanged: 0/0
   339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   340 ;;      Params:         0       0       0       0       0       0       0
   341 ;;      Locals:         8       0       0       0       0       0       0
   342 ;;      Temps:          0       0       0       0       0       0       0
   343 ;;      Totals:         8       0       0       0       0       0       0
   344 ;;Total ram usage:        8 bytes
   345 ;; Hardware stack levels required when called: 4
   346 ;; This function calls:
   347 ;;		_LCD_Init
   348 ;;		_LCD_Write
   349 ;;		_LCD_putc
   350 ;;		_LCD_putrs
   351 ;;		_MCU_Delayms
   352 ;;		_MCU_Init
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text0
   359  0007B8                     __ptext0:
   360                           	callstack 0
   361  0007B8                     _main:
   362                           	callstack 27
   363  0007B8                     
   364                           ;main.c: 55:     MCU_Init();
   365  0007B8  EC5D  F006         	call	_MCU_Init	;wreg free
   366  0007BC                     
   367                           ;main.c: 57:     LCD lcd = { &PORTB, 0, 1, 4, 5, 6, 7 };
   368  0007BC  EE20  F033         	lfsr	2,main@F6093
   369  0007C0  EE10  F047         	lfsr	1,main@lcd
   370  0007C4  0E04               	movlw	4
   371  0007C6                     u411:
   372  0007C6  CFDB FFE3          	movff	plusw2,plusw1
   373  0007CA  06E8               	decf	wreg,f,c
   374  0007CC  E2FC               	bc	u411
   375  0007CE                     
   376                           ;main.c: 58:     LCD_Init(lcd);
   377  0007CE  EE20  F047         	lfsr	2,main@lcd
   378  0007D2  EE00  F040         	lfsr	0,LCD_Init@display
   379  0007D6  0E04               	movlw	4
   380  0007D8                     u421:
   381  0007D8  CFDB FFEB          	movff	plusw2,plusw0
   382  0007DC  06E8               	decf	wreg,f,c
   383  0007DE  E2FC               	bc	u421
   384  0007E0  EC00  F005         	call	_LCD_Init	;wreg free
   385  0007E4  0E00               	movlw	0
   386  0007E6  EC7A  F005         	call	_LCD_Write
   387  0007EA  0E01               	movlw	1
   388  0007EC  EC7A  F005         	call	_LCD_Write
   389  0007F0                     l1240:
   390  0007F0  0E00               	movlw	0
   391  0007F2  EC7A  F005         	call	_LCD_Write
   392  0007F6  0E01               	movlw	1
   393  0007F8  EC7A  F005         	call	_LCD_Write
   394  0007FC  0E08               	movlw	8
   395  0007FE  EC7A  F005         	call	_LCD_Write
   396  000802  0E00               	movlw	0
   397  000804  EC7A  F005         	call	_LCD_Write
   398  000808                     
   399                           ;main.c: 63:         LCD_putrs(" LCD 16x2 & XC8 ");
   400  000808  0E01               	movlw	low STR_1
   401  00080A  6E40               	movwf	LCD_putrs@a^0,c
   402  00080C  0E06               	movlw	high STR_1
   403  00080E  6E41               	movwf	(LCD_putrs@a+1)^0,c
   404  000810  ECCA  F005         	call	_LCD_putrs	;wreg free
   405  000814  0E0C               	movlw	12
   406  000816  EC7A  F005         	call	_LCD_Write
   407  00081A  0E00               	movlw	0
   408  00081C  EC7A  F005         	call	_LCD_Write
   409  000820                     
   410                           ;main.c: 65:         for(char c = 0; c<15; ++c){
   411  000820  0E00               	movlw	0
   412  000822  6E4C               	movwf	main@c^0,c
   413  000824                     l1270:
   414                           
   415                           ;main.c: 66:             LCD_putc(text_1[c]);
   416  000824  0E22               	movlw	low _text_1
   417  000826  244C               	addwf	main@c^0,w,c
   418  000828  6ED9               	movwf	fsr2l,c
   419  00082A  6ADA               	clrf	fsr2h,c
   420  00082C  0E00               	movlw	high _text_1
   421  00082E  22DA               	addwfc	fsr2h,f,c
   422  000830  50DF               	movf	indf2,w,c
   423  000832  EC80  F004         	call	_LCD_putc
   424  000836                     
   425                           ;main.c: 67:             MCU_Delayms(300);
   426  000836  0E01               	movlw	1
   427  000838  6E39               	movwf	(MCU_Delayms@time+1)^0,c
   428  00083A  0E2C               	movlw	44
   429  00083C  6E38               	movwf	MCU_Delayms@time^0,c
   430  00083E  EC14  F006         	call	_MCU_Delayms	;wreg free
   431  000842                     
   432                           ;main.c: 68:         }
   433  000842  2A4C               	incf	main@c^0,f,c
   434  000844  0E0E               	movlw	14
   435  000846  644C               	cpfsgt	main@c^0,c
   436  000848  EF28  F004         	goto	u431
   437  00084C  EF2A  F004         	goto	u430
   438  000850                     u431:
   439  000850  EF12  F004         	goto	l1270
   440  000854                     u430:
   441  000854                     
   442                           ;main.c: 69:         MCU_Delayms(1000);
   443  000854  0E03               	movlw	3
   444  000856  6E39               	movwf	(MCU_Delayms@time+1)^0,c
   445  000858  0EE8               	movlw	232
   446  00085A  6E38               	movwf	MCU_Delayms@time^0,c
   447  00085C  EC14  F006         	call	_MCU_Delayms	;wreg free
   448  000860  0E00               	movlw	0
   449  000862  EC7A  F005         	call	_LCD_Write
   450  000866  0E01               	movlw	1
   451  000868  EC7A  F005         	call	_LCD_Write
   452  00086C  0E08               	movlw	8
   453  00086E  EC7A  F005         	call	_LCD_Write
   454  000872  0E00               	movlw	0
   455  000874  EC7A  F005         	call	_LCD_Write
   456  000878                     
   457                           ;main.c: 72:         for(char c = 0; c<16; ++c){
   458  000878  0E00               	movlw	0
   459  00087A  6E4D               	movwf	main@c_549^0,c
   460  00087C                     l1300:
   461                           
   462                           ;main.c: 73:             LCD_putc(text_2[c]);
   463  00087C  0E01               	movlw	low _text_2
   464  00087E  244D               	addwf	main@c_549^0,w,c
   465  000880  6ED9               	movwf	fsr2l,c
   466  000882  6ADA               	clrf	fsr2h,c
   467  000884  0E00               	movlw	high _text_2
   468  000886  22DA               	addwfc	fsr2h,f,c
   469  000888  50DF               	movf	indf2,w,c
   470  00088A  EC80  F004         	call	_LCD_putc
   471  00088E                     
   472                           ;main.c: 74:             MCU_Delayms(300);
   473  00088E  0E01               	movlw	1
   474  000890  6E39               	movwf	(MCU_Delayms@time+1)^0,c
   475  000892  0E2C               	movlw	44
   476  000894  6E38               	movwf	MCU_Delayms@time^0,c
   477  000896  EC14  F006         	call	_MCU_Delayms	;wreg free
   478  00089A                     
   479                           ;main.c: 75:         }
   480  00089A  2A4D               	incf	main@c_549^0,f,c
   481  00089C  0E0F               	movlw	15
   482  00089E  644D               	cpfsgt	main@c_549^0,c
   483  0008A0  EF54  F004         	goto	u441
   484  0008A4  EF56  F004         	goto	u440
   485  0008A8                     u441:
   486  0008A8  EF3E  F004         	goto	l1300
   487  0008AC                     u440:
   488  0008AC  0E0C               	movlw	12
   489  0008AE  EC7A  F005         	call	_LCD_Write
   490  0008B2  0E00               	movlw	0
   491  0008B4  EC7A  F005         	call	_LCD_Write
   492  0008B8                     
   493                           ;main.c: 77:         for(char c = 16; c<32; ++c){
   494  0008B8  0E10               	movlw	16
   495  0008BA  6E4E               	movwf	main@c_550^0,c
   496  0008BC                     l1322:
   497                           
   498                           ;main.c: 78:             LCD_putc(text_2[c]);
   499  0008BC  0E01               	movlw	low _text_2
   500  0008BE  244E               	addwf	main@c_550^0,w,c
   501  0008C0  6ED9               	movwf	fsr2l,c
   502  0008C2  6ADA               	clrf	fsr2h,c
   503  0008C4  0E00               	movlw	high _text_2
   504  0008C6  22DA               	addwfc	fsr2h,f,c
   505  0008C8  50DF               	movf	indf2,w,c
   506  0008CA  EC80  F004         	call	_LCD_putc
   507  0008CE                     
   508                           ;main.c: 79:             MCU_Delayms(300);
   509  0008CE  0E01               	movlw	1
   510  0008D0  6E39               	movwf	(MCU_Delayms@time+1)^0,c
   511  0008D2  0E2C               	movlw	44
   512  0008D4  6E38               	movwf	MCU_Delayms@time^0,c
   513  0008D6  EC14  F006         	call	_MCU_Delayms	;wreg free
   514  0008DA                     
   515                           ;main.c: 80:         }
   516  0008DA  2A4E               	incf	main@c_550^0,f,c
   517  0008DC  0E1F               	movlw	31
   518  0008DE  644E               	cpfsgt	main@c_550^0,c
   519  0008E0  EF74  F004         	goto	u451
   520  0008E4  EF76  F004         	goto	u450
   521  0008E8                     u451:
   522  0008E8  EF5E  F004         	goto	l1322
   523  0008EC                     u450:
   524  0008EC                     
   525                           ;main.c: 81:         MCU_Delayms(1000);
   526  0008EC  0E03               	movlw	3
   527  0008EE  6E39               	movwf	(MCU_Delayms@time+1)^0,c
   528  0008F0  0EE8               	movlw	232
   529  0008F2  6E38               	movwf	MCU_Delayms@time^0,c
   530  0008F4  EC14  F006         	call	_MCU_Delayms	;wreg free
   531  0008F8  EFF8  F003         	goto	l1240
   532  0008FC  EF25  F000         	goto	start
   533  000900                     __end_of_main:
   534                           	callstack 0
   535                           
   536 ;; *************** function _MCU_Init *****************
   537 ;; Defined at:
   538 ;;		line 85 in file "main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   552 ;;      Params:         0       0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 2
   559 ;; This function calls:
   560 ;;		_RTCC_Init
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text1
   567  000CBA                     __ptext1:
   568                           	callstack 0
   569  000CBA                     _MCU_Init:
   570                           	callstack 28
   571  000CBA                     
   572                           ;main.c: 86:     ANSELA = 0;
   573  000CBA  0E00               	movlw	0
   574  000CBC  010F               	movlb	15	; () banked
   575  000CBE  6F38               	movwf	56,b	;volatile
   576                           
   577                           ;main.c: 87:     ANSELB = 0;
   578  000CC0  0E00               	movlw	0
   579  000CC2  6F39               	movwf	57,b	;volatile
   580                           
   581                           ;main.c: 88:     ANSELC = 0;
   582  000CC4  0E00               	movlw	0
   583  000CC6  6F3A               	movwf	58,b	;volatile
   584                           
   585                           ;main.c: 90:     OSCCONbits.IRCF=0b111;
   586  000CC8  0E70               	movlw	112
   587  000CCA  12D3               	iorwf	211,f,c	;volatile
   588  000CCC                     
   589                           ; BSR set to: 15
   590                           ;main.c: 91:     TRISCbits.RC6 = 0;
   591  000CCC  9C94               	bcf	148,6,c	;volatile
   592  000CCE                     
   593                           ; BSR set to: 15
   594                           ;main.c: 92:     RTCC_Init();
   595  000CCE  EC4C  F006         	call	_RTCC_Init	;wreg free
   596  000CD2  0012               	return		;funcret
   597  000CD4                     __end_of_MCU_Init:
   598                           	callstack 0
   599                           
   600 ;; *************** function _RTCC_Init *****************
   601 ;; Defined at:
   602 ;;		line 102 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   616 ;;      Params:         0       0       0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_MCU_Init
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text2
   631  000C98                     __ptext2:
   632                           	callstack 0
   633  000C98                     _RTCC_Init:
   634                           	callstack 28
   635  000C98                     
   636                           ;main.c: 104:     T0CONbits.TMR0ON = 1;
   637  000C98  8ED5               	bsf	213,7,c	;volatile
   638                           
   639                           ;main.c: 105:     T0CONbits.T08BIT = 0;
   640  000C9A  9CD5               	bcf	213,6,c	;volatile
   641                           
   642                           ;main.c: 106:     T0CONbits.T0CS = 0;
   643  000C9C  9AD5               	bcf	213,5,c	;volatile
   644                           
   645                           ;main.c: 107:     T0CONbits.T0SE = 0;
   646  000C9E  98D5               	bcf	213,4,c	;volatile
   647                           
   648                           ;main.c: 108:     T0CONbits.PSA = 0;
   649  000CA0  96D5               	bcf	213,3,c	;volatile
   650  000CA2                     
   651                           ;main.c: 109:     T0CONbits.T0PS = 0b000;
   652  000CA2  0EF8               	movlw	-8
   653  000CA4  16D5               	andwf	213,f,c	;volatile
   654                           
   655                           ;main.c: 110:     TMR0H = 0xF8;
   656  000CA6  0EF8               	movlw	248
   657  000CA8  6ED7               	movwf	215,c	;volatile
   658                           
   659                           ;main.c: 111:     TMR0L = 0x30;
   660  000CAA  0E30               	movlw	48
   661  000CAC  6ED6               	movwf	214,c	;volatile
   662  000CAE                     
   663                           ;main.c: 112:     INTCONbits.TMR0IF = 0;
   664  000CAE  94F2               	bcf	242,2,c	;volatile
   665  000CB0                     
   666                           ;main.c: 113:     INTCONbits.TMR0IE = 1;
   667  000CB0  8AF2               	bsf	242,5,c	;volatile
   668  000CB2                     
   669                           ;main.c: 114:     INTCON2bits.TMR0IP = 1;
   670  000CB2  84F1               	bsf	241,2,c	;volatile
   671  000CB4                     
   672                           ;main.c: 115:     RCONbits.IPEN = 1;
   673  000CB4  8ED0               	bsf	208,7,c	;volatile
   674  000CB6                     
   675                           ;main.c: 116:     INTCONbits.GIEH = 1;
   676  000CB6  8EF2               	bsf	242,7,c	;volatile
   677  000CB8  0012               	return		;funcret
   678  000CBA                     __end_of_RTCC_Init:
   679                           	callstack 0
   680                           
   681 ;; *************** function _MCU_Delayms *****************
   682 ;; Defined at:
   683 ;;		line 95 in file "main.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;  time            2    0[COMRAM] unsigned int 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  acc             2    3[COMRAM] unsigned int 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   697 ;;      Params:         2       0       0       0       0       0       0
   698 ;;      Locals:         2       0       0       0       0       0       0
   699 ;;      Temps:          1       0       0       0       0       0       0
   700 ;;      Totals:         5       0       0       0       0       0       0
   701 ;;Total ram usage:        5 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; Hardware stack levels required when called: 1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text3
   712  000C28                     __ptext3:
   713                           	callstack 0
   714  000C28                     _MCU_Delayms:
   715                           	callstack 29
   716  000C28                     
   717                           ;main.c: 96:     unsigned int acc;;main.c: 97:     for(acc=0; acc<time; acc++){
   718  000C28  0E00               	movlw	0
   719  000C2A  6E3C               	movwf	(MCU_Delayms@acc+1)^0,c
   720  000C2C  0E00               	movlw	0
   721  000C2E  6E3B               	movwf	MCU_Delayms@acc^0,c
   722  000C30  EF24  F006         	goto	l218
   723  000C34                     l1226:
   724                           
   725                           ;main.c: 98:         _delay((unsigned long)((1)*(16000000/4000.0)));
   726  000C34  0E06               	movlw	6
   727  000C36  6E3A               	movwf	??_MCU_Delayms^0,c
   728  000C38  0E30               	movlw	48
   729  000C3A                     u467:
   730  000C3A  2EE8               	decfsz	wreg,f,c
   731  000C3C  D7FE               	bra	u467
   732  000C3E  2E3A               	decfsz	??_MCU_Delayms^0,f,c
   733  000C40  D7FC               	bra	u467
   734  000C42  D000               	nop2	
   735  000C44                     
   736                           ;main.c: 99:     }
   737  000C44  4A3B               	infsnz	MCU_Delayms@acc^0,f,c
   738  000C46  2A3C               	incf	(MCU_Delayms@acc+1)^0,f,c
   739  000C48                     l218:
   740  000C48  5038               	movf	MCU_Delayms@time^0,w,c
   741  000C4A  5C3B               	subwf	MCU_Delayms@acc^0,w,c
   742  000C4C  5039               	movf	(MCU_Delayms@time+1)^0,w,c
   743  000C4E  583C               	subwfb	(MCU_Delayms@acc+1)^0,w,c
   744  000C50  A0D8               	btfss	status,0,c
   745  000C52  EF2D  F006         	goto	u401
   746  000C56  EF2F  F006         	goto	u400
   747  000C5A                     u401:
   748  000C5A  EF1A  F006         	goto	l1226
   749  000C5E                     u400:
   750  000C5E  0012               	return		;funcret
   751  000C60                     __end_of_MCU_Delayms:
   752                           	callstack 0
   753                           
   754 ;; *************** function _LCD_putrs *****************
   755 ;; Defined at:
   756 ;;		line 143 in file "lcd.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  a               2    8[COMRAM] PTR const unsigned char 
   759 ;;		 -> STR_1(17), 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  i               2   12[COMRAM] int 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   771 ;;      Params:         2       0       0       0       0       0       0
   772 ;;      Locals:         2       0       0       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0       0       0
   774 ;;      Totals:         6       0       0       0       0       0       0
   775 ;;Total ram usage:        6 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; Hardware stack levels required when called: 3
   778 ;; This function calls:
   779 ;;		_LCD_putc
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text4
   786  000B94                     __ptext4:
   787                           	callstack 0
   788  000B94                     _LCD_putrs:
   789                           	callstack 27
   790  000B94                     
   791                           ;lcd.c: 145:     for ( int i = 0; a[i] != '\0'; ++i ) {
   792  000B94  0E00               	movlw	0
   793  000B96  6E45               	movwf	(LCD_putrs@i+1)^0,c
   794  000B98  0E00               	movlw	0
   795  000B9A  6E44               	movwf	LCD_putrs@i^0,c
   796  000B9C  EFE0  F005         	goto	l1222
   797  000BA0                     l1218:
   798                           
   799                           ;lcd.c: 146:         LCD_putc(a[i]);
   800  000BA0  5044               	movf	LCD_putrs@i^0,w,c
   801  000BA2  2440               	addwf	LCD_putrs@a^0,w,c
   802  000BA4  6E42               	movwf	??_LCD_putrs^0,c
   803  000BA6  5045               	movf	(LCD_putrs@i+1)^0,w,c
   804  000BA8  2041               	addwfc	(LCD_putrs@a+1)^0,w,c
   805  000BAA  6E43               	movwf	(??_LCD_putrs+1)^0,c
   806  000BAC  C042  FFF6         	movff	??_LCD_putrs,tblptrl
   807  000BB0  C043  FFF7         	movff	??_LCD_putrs+1,tblptrh
   808  000BB4                     	if	0	;tblptru may be non-zero
   809  000BB4                     	endif
   810  000BB4                     	if	0	;tblptru may be non-zero
   811  000BB4                     	endif
   812  000BB4  0008               	tblrd		*
   813  000BB6  50F5               	movf	tablat,w,c
   814  000BB8  EC80  F004         	call	_LCD_putc
   815  000BBC                     
   816                           ;lcd.c: 147:     }
   817  000BBC  4A44               	infsnz	LCD_putrs@i^0,f,c
   818  000BBE  2A45               	incf	(LCD_putrs@i+1)^0,f,c
   819  000BC0                     l1222:
   820  000BC0  5044               	movf	LCD_putrs@i^0,w,c
   821  000BC2  2440               	addwf	LCD_putrs@a^0,w,c
   822  000BC4  6E42               	movwf	??_LCD_putrs^0,c
   823  000BC6  5045               	movf	(LCD_putrs@i+1)^0,w,c
   824  000BC8  2041               	addwfc	(LCD_putrs@a+1)^0,w,c
   825  000BCA  6E43               	movwf	(??_LCD_putrs+1)^0,c
   826  000BCC  C042  FFF6         	movff	??_LCD_putrs,tblptrl
   827  000BD0  C043  FFF7         	movff	??_LCD_putrs+1,tblptrh
   828  000BD4                     	if	0	;tblptru may be non-zero
   829  000BD4                     	endif
   830  000BD4                     	if	0	;tblptru may be non-zero
   831  000BD4                     	endif
   832  000BD4  0008               	tblrd		*
   833  000BD6  50F5               	movf	tablat,w,c
   834  000BD8  0900               	iorlw	0
   835  000BDA  A4D8               	btfss	status,2,c
   836  000BDC  EFF2  F005         	goto	u391
   837  000BE0  EFF4  F005         	goto	u390
   838  000BE4                     u391:
   839  000BE4  EFD0  F005         	goto	l1218
   840  000BE8                     u390:
   841  000BE8  0012               	return		;funcret
   842  000BEA                     __end_of_LCD_putrs:
   843                           	callstack 0
   844                           
   845 ;; *************** function _LCD_putc *****************
   846 ;; Defined at:
   847 ;;		line 118 in file "lcd.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  c               1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  c               1    7[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   861 ;;      Params:         0       0       0       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0       0       0
   863 ;;      Temps:          3       0       0       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 2
   868 ;; This function calls:
   869 ;;		_LCD_Out
   870 ;; This function is called by:
   871 ;;		_LCD_putrs
   872 ;;		_main
   873 ;;		_LCD_puts
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           	psect	text5
   878  000900                     __ptext5:
   879                           	callstack 0
   880  000900                     _LCD_putc:
   881                           	callstack 27
   882                           
   883                           ;incstack = 0
   884                           ;LCD_putc@c stored from wreg
   885  000900  6E3F               	movwf	LCD_putc@c^0,c
   886  000902                     
   887                           ;lcd.c: 120:    *(lcd.PORT) |= 1 << lcd.RS;
   888  000902  5051               	movf	(_lcd+2)^0,w,c
   889  000904  0B07               	andlw	7
   890  000906  6E3C               	movwf	??_LCD_putc^0,c
   891  000908  0E01               	movlw	1
   892  00090A  6E3D               	movwf	(??_LCD_putc+1)^0,c
   893  00090C  2A3C               	incf	??_LCD_putc^0,f,c
   894  00090E  EF8B  F004         	goto	u164
   895  000912                     u165:
   896  000912  90D8               	bcf	status,0,c
   897  000914  363D               	rlcf	(??_LCD_putc+1)^0,f,c
   898  000916                     u164:
   899  000916  2E3C               	decfsz	??_LCD_putc^0,f,c
   900  000918  EF89  F004         	goto	u165
   901  00091C  C04F  FFD9         	movff	_lcd,fsr2l
   902  000920  C050  FFDA         	movff	_lcd+1,fsr2h
   903  000924  503D               	movf	(??_LCD_putc+1)^0,w,c
   904  000926  12DF               	iorwf	indf2,f,c
   905  000928                     
   906                           ;lcd.c: 121:     LCD_Out((c & 0xF0) >> 4);
   907  000928  383F               	swapf	LCD_putc@c^0,w,c
   908  00092A  0B0F               	andlw	15
   909  00092C  0B0F               	andlw	15
   910  00092E  EC0A  F003         	call	_LCD_Out
   911  000932                     
   912                           ;lcd.c: 123:     *(lcd.PORT) |= 1 << lcd.EN;
   913  000932  3051               	rrcf	(_lcd+2)^0,w,c
   914  000934  32E8               	rrcf	wreg,f,c
   915  000936  32E8               	rrcf	wreg,f,c
   916  000938  0B07               	andlw	7
   917  00093A  6E3C               	movwf	??_LCD_putc^0,c
   918  00093C  0E01               	movlw	1
   919  00093E  6E3D               	movwf	(??_LCD_putc+1)^0,c
   920  000940  2A3C               	incf	??_LCD_putc^0,f,c
   921  000942  EFA5  F004         	goto	u174
   922  000946                     u175:
   923  000946  90D8               	bcf	status,0,c
   924  000948  363D               	rlcf	(??_LCD_putc+1)^0,f,c
   925  00094A                     u174:
   926  00094A  2E3C               	decfsz	??_LCD_putc^0,f,c
   927  00094C  EFA3  F004         	goto	u175
   928  000950  C04F  FFD9         	movff	_lcd,fsr2l
   929  000954  C050  FFDA         	movff	_lcd+1,fsr2h
   930  000958  503D               	movf	(??_LCD_putc+1)^0,w,c
   931  00095A  12DF               	iorwf	indf2,f,c
   932  00095C                     
   933                           ;lcd.c: 124:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   934  00095C  0E35               	movlw	53
   935  00095E                     u477:
   936  00095E  2EE8               	decfsz	wreg,f,c
   937  000960  D7FE               	bra	u477
   938  000962  F000               	nop	
   939  000964                     
   940                           ;lcd.c: 125:     *(lcd.PORT) &= ~(1 << lcd.EN);
   941  000964  3051               	rrcf	(_lcd+2)^0,w,c
   942  000966  32E8               	rrcf	wreg,f,c
   943  000968  32E8               	rrcf	wreg,f,c
   944  00096A  0B07               	andlw	7
   945  00096C  6E3C               	movwf	??_LCD_putc^0,c
   946  00096E  0E01               	movlw	1
   947  000970  6E3D               	movwf	(??_LCD_putc+1)^0,c
   948  000972  2A3C               	incf	??_LCD_putc^0,f,c
   949  000974  EFBE  F004         	goto	u184
   950  000978                     u185:
   951  000978  90D8               	bcf	status,0,c
   952  00097A  363D               	rlcf	(??_LCD_putc+1)^0,f,c
   953  00097C                     u184:
   954  00097C  2E3C               	decfsz	??_LCD_putc^0,f,c
   955  00097E  EFBC  F004         	goto	u185
   956  000982  503D               	movf	(??_LCD_putc+1)^0,w,c
   957  000984  0AFF               	xorlw	255
   958  000986  6E3E               	movwf	(??_LCD_putc+2)^0,c
   959  000988  C04F  FFD9         	movff	_lcd,fsr2l
   960  00098C  C050  FFDA         	movff	_lcd+1,fsr2h
   961  000990  503E               	movf	(??_LCD_putc+2)^0,w,c
   962  000992  16DF               	andwf	indf2,f,c
   963  000994                     
   964                           ;lcd.c: 127:     LCD_Out(c & 0x0F);
   965  000994  503F               	movf	LCD_putc@c^0,w,c
   966  000996  0B0F               	andlw	15
   967  000998  EC0A  F003         	call	_LCD_Out
   968  00099C                     
   969                           ;lcd.c: 129:     *(lcd.PORT) |= 1 << lcd.EN;
   970  00099C  3051               	rrcf	(_lcd+2)^0,w,c
   971  00099E  32E8               	rrcf	wreg,f,c
   972  0009A0  32E8               	rrcf	wreg,f,c
   973  0009A2  0B07               	andlw	7
   974  0009A4  6E3C               	movwf	??_LCD_putc^0,c
   975  0009A6  0E01               	movlw	1
   976  0009A8  6E3D               	movwf	(??_LCD_putc+1)^0,c
   977  0009AA  2A3C               	incf	??_LCD_putc^0,f,c
   978  0009AC  EFDA  F004         	goto	u194
   979  0009B0                     u195:
   980  0009B0  90D8               	bcf	status,0,c
   981  0009B2  363D               	rlcf	(??_LCD_putc+1)^0,f,c
   982  0009B4                     u194:
   983  0009B4  2E3C               	decfsz	??_LCD_putc^0,f,c
   984  0009B6  EFD8  F004         	goto	u195
   985  0009BA  C04F  FFD9         	movff	_lcd,fsr2l
   986  0009BE  C050  FFDA         	movff	_lcd+1,fsr2h
   987  0009C2  503D               	movf	(??_LCD_putc+1)^0,w,c
   988  0009C4  12DF               	iorwf	indf2,f,c
   989                           
   990                           ;lcd.c: 130:     _delay((unsigned long)((40)*(16000000/4000000.0)));
   991  0009C6  0E35               	movlw	53
   992  0009C8                     u487:
   993  0009C8  2EE8               	decfsz	wreg,f,c
   994  0009CA  D7FE               	bra	u487
   995  0009CC  F000               	nop	
   996  0009CE                     
   997                           ;lcd.c: 131:     *(lcd.PORT) &= ~(1 << lcd.EN);
   998  0009CE  3051               	rrcf	(_lcd+2)^0,w,c
   999  0009D0  32E8               	rrcf	wreg,f,c
  1000  0009D2  32E8               	rrcf	wreg,f,c
  1001  0009D4  0B07               	andlw	7
  1002  0009D6  6E3C               	movwf	??_LCD_putc^0,c
  1003  0009D8  0E01               	movlw	1
  1004  0009DA  6E3D               	movwf	(??_LCD_putc+1)^0,c
  1005  0009DC  2A3C               	incf	??_LCD_putc^0,f,c
  1006  0009DE  EFF3  F004         	goto	u204
  1007  0009E2                     u205:
  1008  0009E2  90D8               	bcf	status,0,c
  1009  0009E4  363D               	rlcf	(??_LCD_putc+1)^0,f,c
  1010  0009E6                     u204:
  1011  0009E6  2E3C               	decfsz	??_LCD_putc^0,f,c
  1012  0009E8  EFF1  F004         	goto	u205
  1013  0009EC  503D               	movf	(??_LCD_putc+1)^0,w,c
  1014  0009EE  0AFF               	xorlw	255
  1015  0009F0  6E3E               	movwf	(??_LCD_putc+2)^0,c
  1016  0009F2  C04F  FFD9         	movff	_lcd,fsr2l
  1017  0009F6  C050  FFDA         	movff	_lcd+1,fsr2h
  1018  0009FA  503E               	movf	(??_LCD_putc+2)^0,w,c
  1019  0009FC  16DF               	andwf	indf2,f,c
  1020  0009FE  0012               	return		;funcret
  1021  000A00                     __end_of_LCD_putc:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _LCD_Init *****************
  1025 ;; Defined at:
  1026 ;;		line 60 in file "lcd.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  display         5    8[COMRAM] struct .
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  cmd             1   14[COMRAM] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      _Bool 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1040 ;;      Params:         5       0       0       0       0       0       0
  1041 ;;      Locals:         1       0       0       0       0       0       0
  1042 ;;      Temps:          1       0       0       0       0       0       0
  1043 ;;      Totals:         7       0       0       0       0       0       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used: 1
  1046 ;; Hardware stack levels required when called: 3
  1047 ;; This function calls:
  1048 ;;		_LCD_Write
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text6
  1055  000A00                     __ptext6:
  1056                           	callstack 0
  1057  000A00                     _LCD_Init:
  1058                           	callstack 27
  1059  000A00                     
  1060                           ;lcd.c: 62:     lcd = display;
  1061  000A00  EE20  F040         	lfsr	2,LCD_Init@display
  1062  000A04  EE10  F04F         	lfsr	1,_lcd
  1063  000A08  0E04               	movlw	4
  1064  000A0A                     u351:
  1065  000A0A  CFDB FFE3          	movff	plusw2,plusw1
  1066  000A0E  06E8               	decf	wreg,f,c
  1067  000A10  E2FC               	bc	u351
  1068  000A12                     
  1069                           ;lcd.c: 71:     if ( lcd.PORT == &PORTA ) {
  1070  000A12  0E80               	movlw	128
  1071  000A14  184F               	xorwf	_lcd^0,w,c
  1072  000A16  E107               	bnz	u361
  1073  000A18  0E0F               	movlw	15
  1074  000A1A  1850               	xorwf	(_lcd+1)^0,w,c
  1075  000A1C  A4D8               	btfss	status,2,c
  1076  000A1E  EF13  F005         	goto	u361
  1077  000A22  EF15  F005         	goto	u360
  1078  000A26                     u361:
  1079  000A26  EF19  F005         	goto	l1170
  1080  000A2A                     u360:
  1081  000A2A                     
  1082                           ;lcd.c: 72:         TRISA = 0x00;
  1083  000A2A  0E00               	movlw	0
  1084  000A2C  6E92               	movwf	146,c	;volatile
  1085                           
  1086                           ;lcd.c: 73:     }
  1087  000A2E  EF37  F005         	goto	l1178
  1088  000A32                     l1170:
  1089  000A32  0E81               	movlw	129
  1090  000A34  184F               	xorwf	_lcd^0,w,c
  1091  000A36  E107               	bnz	u371
  1092  000A38  0E0F               	movlw	15
  1093  000A3A  1850               	xorwf	(_lcd+1)^0,w,c
  1094  000A3C  A4D8               	btfss	status,2,c
  1095  000A3E  EF23  F005         	goto	u371
  1096  000A42  EF25  F005         	goto	u370
  1097  000A46                     u371:
  1098  000A46  EF29  F005         	goto	l1174
  1099  000A4A                     u370:
  1100  000A4A                     
  1101                           ;lcd.c: 75:         TRISB = 0x00;
  1102  000A4A  0E00               	movlw	0
  1103  000A4C  6E93               	movwf	147,c	;volatile
  1104                           
  1105                           ;lcd.c: 76:     }
  1106  000A4E  EF37  F005         	goto	l1178
  1107  000A52                     l1174:
  1108  000A52  0E82               	movlw	130
  1109  000A54  184F               	xorwf	_lcd^0,w,c
  1110  000A56  E107               	bnz	u381
  1111  000A58  0E0F               	movlw	15
  1112  000A5A  1850               	xorwf	(_lcd+1)^0,w,c
  1113  000A5C  A4D8               	btfss	status,2,c
  1114  000A5E  EF33  F005         	goto	u381
  1115  000A62  EF35  F005         	goto	u380
  1116  000A66                     u381:
  1117  000A66  EF79  F005         	goto	l39
  1118  000A6A                     u380:
  1119  000A6A                     
  1120                           ;lcd.c: 78:         TRISC = 0x00;
  1121  000A6A  0E00               	movlw	0
  1122  000A6C  6E94               	movwf	148,c	;volatile
  1123  000A6E                     l1178:
  1124                           
  1125                           ;lcd.c: 93:     _delay((unsigned long)((20)*(16000000/4000.0)));
  1126  000A6E  0E68               	movlw	104
  1127  000A70  6E45               	movwf	??_LCD_Init^0,c
  1128  000A72  0EE4               	movlw	228
  1129  000A74                     u497:
  1130  000A74  2EE8               	decfsz	wreg,f,c
  1131  000A76  D7FE               	bra	u497
  1132  000A78  2E45               	decfsz	??_LCD_Init^0,f,c
  1133  000A7A  D7FC               	bra	u497
  1134  000A7C  D000               	nop2	
  1135  000A7E                     
  1136                           ;lcd.c: 96:     LCD_Write(0x03);
  1137  000A7E  0E03               	movlw	3
  1138  000A80  EC7A  F005         	call	_LCD_Write
  1139  000A84                     
  1140                           ;lcd.c: 97:     _delay((unsigned long)((5)*(16000000/4000.0)));
  1141  000A84  0E1A               	movlw	26
  1142  000A86  6E45               	movwf	??_LCD_Init^0,c
  1143  000A88  0EF8               	movlw	248
  1144  000A8A                     u507:
  1145  000A8A  2EE8               	decfsz	wreg,f,c
  1146  000A8C  D7FE               	bra	u507
  1147  000A8E  2E45               	decfsz	??_LCD_Init^0,f,c
  1148  000A90  D7FC               	bra	u507
  1149  000A92  D000               	nop2	
  1150                           
  1151                           ;lcd.c: 98:     LCD_Write(0x03);
  1152  000A94  0E03               	movlw	3
  1153  000A96  EC7A  F005         	call	_LCD_Write
  1154  000A9A                     
  1155                           ;lcd.c: 99:     _delay((unsigned long)((16)*(16000000/4000.0)));
  1156  000A9A  0E54               	movlw	84
  1157  000A9C  6E45               	movwf	??_LCD_Init^0,c
  1158  000A9E  0E1C               	movlw	28
  1159  000AA0                     u517:
  1160  000AA0  2EE8               	decfsz	wreg,f,c
  1161  000AA2  D7FE               	bra	u517
  1162  000AA4  2E45               	decfsz	??_LCD_Init^0,f,c
  1163  000AA6  D7FC               	bra	u517
  1164  000AA8  D000               	nop2	
  1165  000AAA                     
  1166                           ;lcd.c: 100:     LCD_Write(0x03);
  1167  000AAA  0E03               	movlw	3
  1168  000AAC  EC7A  F005         	call	_LCD_Write
  1169  000AB0                     
  1170                           ;lcd.c: 103:     LCD_Write(0x02);
  1171  000AB0  0E02               	movlw	2
  1172  000AB2  EC7A  F005         	call	_LCD_Write
  1173  000AB6  0E02               	movlw	2
  1174  000AB8  EC7A  F005         	call	_LCD_Write
  1175  000ABC  0E08               	movlw	8
  1176  000ABE  EC7A  F005         	call	_LCD_Write
  1177  000AC2  0E00               	movlw	0
  1178  000AC4  EC7A  F005         	call	_LCD_Write
  1179  000AC8  0E06               	movlw	6
  1180  000ACA  EC7A  F005         	call	_LCD_Write
  1181  000ACE  0E08               	movlw	8
  1182  000AD0  6E46               	movwf	LCD_Init@cmd^0,c
  1183  000AD2  8446               	bsf	LCD_Init@cmd^0,2,c
  1184  000AD4  3846               	swapf	LCD_Init@cmd^0,w,c
  1185  000AD6  0B0F               	andlw	15
  1186  000AD8  0B0F               	andlw	15
  1187  000ADA  EC7A  F005         	call	_LCD_Write
  1188  000ADE  5046               	movf	LCD_Init@cmd^0,w,c
  1189  000AE0  0B0F               	andlw	15
  1190  000AE2  EC7A  F005         	call	_LCD_Write
  1191  000AE6  0E00               	movlw	0
  1192  000AE8  EC7A  F005         	call	_LCD_Write
  1193  000AEC  0E01               	movlw	1
  1194  000AEE  EC7A  F005         	call	_LCD_Write
  1195  000AF2                     l39:
  1196  000AF2  0012               	return		;funcret
  1197  000AF4                     __end_of_LCD_Init:
  1198                           	callstack 0
  1199                           
  1200 ;; *************** function _LCD_Write *****************
  1201 ;; Defined at:
  1202 ;;		line 52 in file "lcd.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  c               1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  c               1    7[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1216 ;;      Params:         0       0       0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0       0       0
  1218 ;;      Temps:          3       0       0       0       0       0       0
  1219 ;;      Totals:         4       0       0       0       0       0       0
  1220 ;;Total ram usage:        4 bytes
  1221 ;; Hardware stack levels used: 1
  1222 ;; Hardware stack levels required when called: 2
  1223 ;; This function calls:
  1224 ;;		_LCD_Out
  1225 ;; This function is called by:
  1226 ;;		_LCD_Init
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text7
  1232  000AF4                     __ptext7:
  1233                           	callstack 0
  1234  000AF4                     _LCD_Write:
  1235                           	callstack 28
  1236                           
  1237                           ;incstack = 0
  1238                           ;LCD_Write@c stored from wreg
  1239  000AF4  6E3F               	movwf	LCD_Write@c^0,c
  1240  000AF6                     
  1241                           ;lcd.c: 53:     *(lcd.PORT) &= ~(1 << lcd.RS);
  1242  000AF6  5051               	movf	(_lcd+2)^0,w,c
  1243  000AF8  0B07               	andlw	7
  1244  000AFA  6E3C               	movwf	??_LCD_Write^0,c
  1245  000AFC  0E01               	movlw	1
  1246  000AFE  6E3D               	movwf	(??_LCD_Write+1)^0,c
  1247  000B00  2A3C               	incf	??_LCD_Write^0,f,c
  1248  000B02  EF85  F005         	goto	u134
  1249  000B06                     u135:
  1250  000B06  90D8               	bcf	status,0,c
  1251  000B08  363D               	rlcf	(??_LCD_Write+1)^0,f,c
  1252  000B0A                     u134:
  1253  000B0A  2E3C               	decfsz	??_LCD_Write^0,f,c
  1254  000B0C  EF83  F005         	goto	u135
  1255  000B10  503D               	movf	(??_LCD_Write+1)^0,w,c
  1256  000B12  0AFF               	xorlw	255
  1257  000B14  6E3E               	movwf	(??_LCD_Write+2)^0,c
  1258  000B16  C04F  FFD9         	movff	_lcd,fsr2l
  1259  000B1A  C050  FFDA         	movff	_lcd+1,fsr2h
  1260  000B1E  503E               	movf	(??_LCD_Write+2)^0,w,c
  1261  000B20  16DF               	andwf	indf2,f,c
  1262  000B22                     
  1263                           ;lcd.c: 54:     LCD_Out(c);
  1264  000B22  503F               	movf	LCD_Write@c^0,w,c
  1265  000B24  EC0A  F003         	call	_LCD_Out
  1266  000B28                     
  1267                           ;lcd.c: 55:     *(lcd.PORT) |= 1 << lcd.EN;
  1268  000B28  3051               	rrcf	(_lcd+2)^0,w,c
  1269  000B2A  32E8               	rrcf	wreg,f,c
  1270  000B2C  32E8               	rrcf	wreg,f,c
  1271  000B2E  0B07               	andlw	7
  1272  000B30  6E3C               	movwf	??_LCD_Write^0,c
  1273  000B32  0E01               	movlw	1
  1274  000B34  6E3D               	movwf	(??_LCD_Write+1)^0,c
  1275  000B36  2A3C               	incf	??_LCD_Write^0,f,c
  1276  000B38  EFA0  F005         	goto	u144
  1277  000B3C                     u145:
  1278  000B3C  90D8               	bcf	status,0,c
  1279  000B3E  363D               	rlcf	(??_LCD_Write+1)^0,f,c
  1280  000B40                     u144:
  1281  000B40  2E3C               	decfsz	??_LCD_Write^0,f,c
  1282  000B42  EF9E  F005         	goto	u145
  1283  000B46  C04F  FFD9         	movff	_lcd,fsr2l
  1284  000B4A  C050  FFDA         	movff	_lcd+1,fsr2h
  1285  000B4E  503D               	movf	(??_LCD_Write+1)^0,w,c
  1286  000B50  12DF               	iorwf	indf2,f,c
  1287  000B52                     
  1288                           ;lcd.c: 56:     _delay((unsigned long)((4)*(16000000/4000.0)));
  1289  000B52  0E15               	movlw	21
  1290  000B54  6E3C               	movwf	??_LCD_Write^0,c
  1291  000B56  0EC6               	movlw	198
  1292  000B58                     u527:
  1293  000B58  2EE8               	decfsz	wreg,f,c
  1294  000B5A  D7FE               	bra	u527
  1295  000B5C  2E3C               	decfsz	??_LCD_Write^0,f,c
  1296  000B5E  D7FC               	bra	u527
  1297  000B60  D000               	nop2	
  1298  000B62                     
  1299                           ;lcd.c: 57:     *(lcd.PORT) &= ~(1 << lcd.EN);
  1300  000B62  3051               	rrcf	(_lcd+2)^0,w,c
  1301  000B64  32E8               	rrcf	wreg,f,c
  1302  000B66  32E8               	rrcf	wreg,f,c
  1303  000B68  0B07               	andlw	7
  1304  000B6A  6E3C               	movwf	??_LCD_Write^0,c
  1305  000B6C  0E01               	movlw	1
  1306  000B6E  6E3D               	movwf	(??_LCD_Write+1)^0,c
  1307  000B70  2A3C               	incf	??_LCD_Write^0,f,c
  1308  000B72  EFBD  F005         	goto	u154
  1309  000B76                     u155:
  1310  000B76  90D8               	bcf	status,0,c
  1311  000B78  363D               	rlcf	(??_LCD_Write+1)^0,f,c
  1312  000B7A                     u154:
  1313  000B7A  2E3C               	decfsz	??_LCD_Write^0,f,c
  1314  000B7C  EFBB  F005         	goto	u155
  1315  000B80  503D               	movf	(??_LCD_Write+1)^0,w,c
  1316  000B82  0AFF               	xorlw	255
  1317  000B84  6E3E               	movwf	(??_LCD_Write+2)^0,c
  1318  000B86  C04F  FFD9         	movff	_lcd,fsr2l
  1319  000B8A  C050  FFDA         	movff	_lcd+1,fsr2h
  1320  000B8E  503E               	movf	(??_LCD_Write+2)^0,w,c
  1321  000B90  16DF               	andwf	indf2,f,c
  1322  000B92  0012               	return		;funcret
  1323  000B94                     __end_of_LCD_Write:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _LCD_Out *****************
  1327 ;; Defined at:
  1328 ;;		line 21 in file "lcd.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  c               1    wreg     unsigned char 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  c               1    3[COMRAM] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1342 ;;      Params:         0       0       0       0       0       0       0
  1343 ;;      Locals:         1       0       0       0       0       0       0
  1344 ;;      Temps:          3       0       0       0       0       0       0
  1345 ;;      Totals:         4       0       0       0       0       0       0
  1346 ;;Total ram usage:        4 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_LCD_Write
  1353 ;;		_LCD_putc
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text8
  1358  000614                     __ptext8:
  1359                           	callstack 0
  1360  000614                     _LCD_Out:
  1361                           	callstack 27
  1362                           
  1363                           ;incstack = 0
  1364                           ;LCD_Out@c stored from wreg
  1365  000614  6E3B               	movwf	LCD_Out@c^0,c
  1366  000616                     
  1367                           ;lcd.c: 22:     if ( c & 1 ){
  1368  000616  A03B               	btfss	LCD_Out@c^0,0,c
  1369  000618  EF10  F003         	goto	u11
  1370  00061C  EF12  F003         	goto	u10
  1371  000620                     u11:
  1372  000620  EF27  F003         	goto	l904
  1373  000624                     u10:
  1374  000624                     
  1375                           ;lcd.c: 23:         *(lcd.PORT) |= 1 << lcd.D4;
  1376  000624  5052               	movf	(_lcd+3)^0,w,c
  1377  000626  0B07               	andlw	7
  1378  000628  6E38               	movwf	??_LCD_Out^0,c
  1379  00062A  0E01               	movlw	1
  1380  00062C  6E39               	movwf	(??_LCD_Out+1)^0,c
  1381  00062E  2A38               	incf	??_LCD_Out^0,f,c
  1382  000630  EF1C  F003         	goto	u24
  1383  000634                     u25:
  1384  000634  90D8               	bcf	status,0,c
  1385  000636  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1386  000638                     u24:
  1387  000638  2E38               	decfsz	??_LCD_Out^0,f,c
  1388  00063A  EF1A  F003         	goto	u25
  1389  00063E  C04F  FFD9         	movff	_lcd,fsr2l
  1390  000642  C050  FFDA         	movff	_lcd+1,fsr2h
  1391  000646  5039               	movf	(??_LCD_Out+1)^0,w,c
  1392  000648  12DF               	iorwf	indf2,f,c
  1393                           
  1394                           ;lcd.c: 24:     }
  1395  00064A  EF3D  F003         	goto	l906
  1396  00064E                     l904:
  1397                           
  1398                           ;lcd.c: 26:          *(lcd.PORT) &= ~(1 << lcd.D4);
  1399  00064E  5052               	movf	(_lcd+3)^0,w,c
  1400  000650  0B07               	andlw	7
  1401  000652  6E38               	movwf	??_LCD_Out^0,c
  1402  000654  0E01               	movlw	1
  1403  000656  6E39               	movwf	(??_LCD_Out+1)^0,c
  1404  000658  2A38               	incf	??_LCD_Out^0,f,c
  1405  00065A  EF31  F003         	goto	u34
  1406  00065E                     u35:
  1407  00065E  90D8               	bcf	status,0,c
  1408  000660  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1409  000662                     u34:
  1410  000662  2E38               	decfsz	??_LCD_Out^0,f,c
  1411  000664  EF2F  F003         	goto	u35
  1412  000668  5039               	movf	(??_LCD_Out+1)^0,w,c
  1413  00066A  0AFF               	xorlw	255
  1414  00066C  6E3A               	movwf	(??_LCD_Out+2)^0,c
  1415  00066E  C04F  FFD9         	movff	_lcd,fsr2l
  1416  000672  C050  FFDA         	movff	_lcd+1,fsr2h
  1417  000676  503A               	movf	(??_LCD_Out+2)^0,w,c
  1418  000678  16DF               	andwf	indf2,f,c
  1419  00067A                     l906:
  1420                           
  1421                           ;lcd.c: 29:     if ( c & 2 ) {
  1422  00067A  A23B               	btfss	LCD_Out@c^0,1,c
  1423  00067C  EF42  F003         	goto	u41
  1424  000680  EF44  F003         	goto	u40
  1425  000684                     u41:
  1426  000684  EF5B  F003         	goto	l910
  1427  000688                     u40:
  1428  000688                     
  1429                           ;lcd.c: 30:         *(lcd.PORT) |= 1 << lcd.D5;
  1430  000688  3052               	rrcf	(_lcd+3)^0,w,c
  1431  00068A  32E8               	rrcf	wreg,f,c
  1432  00068C  32E8               	rrcf	wreg,f,c
  1433  00068E  0B07               	andlw	7
  1434  000690  6E38               	movwf	??_LCD_Out^0,c
  1435  000692  0E01               	movlw	1
  1436  000694  6E39               	movwf	(??_LCD_Out+1)^0,c
  1437  000696  2A38               	incf	??_LCD_Out^0,f,c
  1438  000698  EF50  F003         	goto	u54
  1439  00069C                     u55:
  1440  00069C  90D8               	bcf	status,0,c
  1441  00069E  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1442  0006A0                     u54:
  1443  0006A0  2E38               	decfsz	??_LCD_Out^0,f,c
  1444  0006A2  EF4E  F003         	goto	u55
  1445  0006A6  C04F  FFD9         	movff	_lcd,fsr2l
  1446  0006AA  C050  FFDA         	movff	_lcd+1,fsr2h
  1447  0006AE  5039               	movf	(??_LCD_Out+1)^0,w,c
  1448  0006B0  12DF               	iorwf	indf2,f,c
  1449                           
  1450                           ;lcd.c: 31:     }
  1451  0006B2  EF73  F003         	goto	l912
  1452  0006B6                     l910:
  1453                           
  1454                           ;lcd.c: 33:         *(lcd.PORT) &= ~(1 << lcd.D5);
  1455  0006B6  3052               	rrcf	(_lcd+3)^0,w,c
  1456  0006B8  32E8               	rrcf	wreg,f,c
  1457  0006BA  32E8               	rrcf	wreg,f,c
  1458  0006BC  0B07               	andlw	7
  1459  0006BE  6E38               	movwf	??_LCD_Out^0,c
  1460  0006C0  0E01               	movlw	1
  1461  0006C2  6E39               	movwf	(??_LCD_Out+1)^0,c
  1462  0006C4  2A38               	incf	??_LCD_Out^0,f,c
  1463  0006C6  EF67  F003         	goto	u64
  1464  0006CA                     u65:
  1465  0006CA  90D8               	bcf	status,0,c
  1466  0006CC  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1467  0006CE                     u64:
  1468  0006CE  2E38               	decfsz	??_LCD_Out^0,f,c
  1469  0006D0  EF65  F003         	goto	u65
  1470  0006D4  5039               	movf	(??_LCD_Out+1)^0,w,c
  1471  0006D6  0AFF               	xorlw	255
  1472  0006D8  6E3A               	movwf	(??_LCD_Out+2)^0,c
  1473  0006DA  C04F  FFD9         	movff	_lcd,fsr2l
  1474  0006DE  C050  FFDA         	movff	_lcd+1,fsr2h
  1475  0006E2  503A               	movf	(??_LCD_Out+2)^0,w,c
  1476  0006E4  16DF               	andwf	indf2,f,c
  1477  0006E6                     l912:
  1478                           
  1479                           ;lcd.c: 36:     if ( c & 4 ) {
  1480  0006E6  A43B               	btfss	LCD_Out@c^0,2,c
  1481  0006E8  EF78  F003         	goto	u71
  1482  0006EC  EF7A  F003         	goto	u70
  1483  0006F0                     u71:
  1484  0006F0  EF8F  F003         	goto	l916
  1485  0006F4                     u70:
  1486  0006F4                     
  1487                           ;lcd.c: 37:         *(lcd.PORT) |= 1 << lcd.D6;
  1488  0006F4  5053               	movf	(_lcd+4)^0,w,c
  1489  0006F6  0B07               	andlw	7
  1490  0006F8  6E38               	movwf	??_LCD_Out^0,c
  1491  0006FA  0E01               	movlw	1
  1492  0006FC  6E39               	movwf	(??_LCD_Out+1)^0,c
  1493  0006FE  2A38               	incf	??_LCD_Out^0,f,c
  1494  000700  EF84  F003         	goto	u84
  1495  000704                     u85:
  1496  000704  90D8               	bcf	status,0,c
  1497  000706  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1498  000708                     u84:
  1499  000708  2E38               	decfsz	??_LCD_Out^0,f,c
  1500  00070A  EF82  F003         	goto	u85
  1501  00070E  C04F  FFD9         	movff	_lcd,fsr2l
  1502  000712  C050  FFDA         	movff	_lcd+1,fsr2h
  1503  000716  5039               	movf	(??_LCD_Out+1)^0,w,c
  1504  000718  12DF               	iorwf	indf2,f,c
  1505                           
  1506                           ;lcd.c: 38:     }
  1507  00071A  EFA5  F003         	goto	l918
  1508  00071E                     l916:
  1509                           
  1510                           ;lcd.c: 40:         *(lcd.PORT) &= ~(1 << lcd.D6);
  1511  00071E  5053               	movf	(_lcd+4)^0,w,c
  1512  000720  0B07               	andlw	7
  1513  000722  6E38               	movwf	??_LCD_Out^0,c
  1514  000724  0E01               	movlw	1
  1515  000726  6E39               	movwf	(??_LCD_Out+1)^0,c
  1516  000728  2A38               	incf	??_LCD_Out^0,f,c
  1517  00072A  EF99  F003         	goto	u94
  1518  00072E                     u95:
  1519  00072E  90D8               	bcf	status,0,c
  1520  000730  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1521  000732                     u94:
  1522  000732  2E38               	decfsz	??_LCD_Out^0,f,c
  1523  000734  EF97  F003         	goto	u95
  1524  000738  5039               	movf	(??_LCD_Out+1)^0,w,c
  1525  00073A  0AFF               	xorlw	255
  1526  00073C  6E3A               	movwf	(??_LCD_Out+2)^0,c
  1527  00073E  C04F  FFD9         	movff	_lcd,fsr2l
  1528  000742  C050  FFDA         	movff	_lcd+1,fsr2h
  1529  000746  503A               	movf	(??_LCD_Out+2)^0,w,c
  1530  000748  16DF               	andwf	indf2,f,c
  1531  00074A                     l918:
  1532                           
  1533                           ;lcd.c: 43:     if ( c & 8 ) {
  1534  00074A  A63B               	btfss	LCD_Out@c^0,3,c
  1535  00074C  EFAA  F003         	goto	u101
  1536  000750  EFAC  F003         	goto	u100
  1537  000754                     u101:
  1538  000754  EFC3  F003         	goto	l922
  1539  000758                     u100:
  1540  000758                     
  1541                           ;lcd.c: 44:          *(lcd.PORT) |= 1 << lcd.D7;
  1542  000758  3053               	rrcf	(_lcd+4)^0,w,c
  1543  00075A  32E8               	rrcf	wreg,f,c
  1544  00075C  32E8               	rrcf	wreg,f,c
  1545  00075E  0B07               	andlw	7
  1546  000760  6E38               	movwf	??_LCD_Out^0,c
  1547  000762  0E01               	movlw	1
  1548  000764  6E39               	movwf	(??_LCD_Out+1)^0,c
  1549  000766  2A38               	incf	??_LCD_Out^0,f,c
  1550  000768  EFB8  F003         	goto	u114
  1551  00076C                     u115:
  1552  00076C  90D8               	bcf	status,0,c
  1553  00076E  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1554  000770                     u114:
  1555  000770  2E38               	decfsz	??_LCD_Out^0,f,c
  1556  000772  EFB6  F003         	goto	u115
  1557  000776  C04F  FFD9         	movff	_lcd,fsr2l
  1558  00077A  C050  FFDA         	movff	_lcd+1,fsr2h
  1559  00077E  5039               	movf	(??_LCD_Out+1)^0,w,c
  1560  000780  12DF               	iorwf	indf2,f,c
  1561                           
  1562                           ;lcd.c: 45:     }
  1563  000782  EFDB  F003         	goto	l27
  1564  000786                     l922:
  1565                           
  1566                           ;lcd.c: 47:          *(lcd.PORT) &= ~(1 << lcd.D7);
  1567  000786  3053               	rrcf	(_lcd+4)^0,w,c
  1568  000788  32E8               	rrcf	wreg,f,c
  1569  00078A  32E8               	rrcf	wreg,f,c
  1570  00078C  0B07               	andlw	7
  1571  00078E  6E38               	movwf	??_LCD_Out^0,c
  1572  000790  0E01               	movlw	1
  1573  000792  6E39               	movwf	(??_LCD_Out+1)^0,c
  1574  000794  2A38               	incf	??_LCD_Out^0,f,c
  1575  000796  EFCF  F003         	goto	u124
  1576  00079A                     u125:
  1577  00079A  90D8               	bcf	status,0,c
  1578  00079C  3639               	rlcf	(??_LCD_Out+1)^0,f,c
  1579  00079E                     u124:
  1580  00079E  2E38               	decfsz	??_LCD_Out^0,f,c
  1581  0007A0  EFCD  F003         	goto	u125
  1582  0007A4  5039               	movf	(??_LCD_Out+1)^0,w,c
  1583  0007A6  0AFF               	xorlw	255
  1584  0007A8  6E3A               	movwf	(??_LCD_Out+2)^0,c
  1585  0007AA  C04F  FFD9         	movff	_lcd,fsr2l
  1586  0007AE  C050  FFDA         	movff	_lcd+1,fsr2h
  1587  0007B2  503A               	movf	(??_LCD_Out+2)^0,w,c
  1588  0007B4  16DF               	andwf	indf2,f,c
  1589  0007B6                     l27:
  1590  0007B6  0012               	return		;funcret
  1591  0007B8                     __end_of_LCD_Out:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  1595 ;; Defined at:
  1596 ;;		line 40 in file "main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		Interrupt level 2
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623                           	psect	intcode
  1624  000008                     __pintcode:
  1625                           	callstack 0
  1626  000008                     _INTERRUPT_InterruptManagerHigh:
  1627                           	callstack 27
  1628                           
  1629                           ;incstack = 0
  1630  000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1631  00000A                     
  1632                           ;main.c: 41:     if(INTCONbits.TMR0IF){
  1633  00000A  A4F2               	btfss	242,2,c	;volatile
  1634  00000C  EF0A  F000         	goto	i2u28_41
  1635  000010  EF0C  F000         	goto	i2u28_40
  1636  000014                     i2u28_41:
  1637  000014  EF23  F000         	goto	i2l122
  1638  000018                     i2u28_40:
  1639  000018                     
  1640                           ;main.c: 42:         ++RTCC_Count;
  1641  000018  4A54               	infsnz	_RTCC_Count^0,f,c
  1642  00001A  2A55               	incf	(_RTCC_Count+1)^0,f,c
  1643  00001C                     
  1644                           ;main.c: 43:         if (RTCC_Count >= 1000){
  1645  00001C  0EE8               	movlw	232
  1646  00001E  5C54               	subwf	_RTCC_Count^0,w,c
  1647  000020  0E03               	movlw	3
  1648  000022  5855               	subwfb	(_RTCC_Count+1)^0,w,c
  1649  000024  A0D8               	btfss	status,0,c
  1650  000026  EF17  F000         	goto	i2u29_41
  1651  00002A  EF19  F000         	goto	i2u29_40
  1652  00002E                     i2u29_41:
  1653  00002E  EF1E  F000         	goto	i2l1054
  1654  000032                     i2u29_40:
  1655  000032                     
  1656                           ;main.c: 44:             PORTCbits.RC6 ^= 1;
  1657  000032  7C82               	btg	130,6,c	;volatile
  1658  000034                     
  1659                           ;main.c: 45:             RTCC_Count = 0;
  1660  000034  0E00               	movlw	0
  1661  000036  6E55               	movwf	(_RTCC_Count+1)^0,c
  1662  000038  0E00               	movlw	0
  1663  00003A  6E54               	movwf	_RTCC_Count^0,c
  1664  00003C                     i2l1054:
  1665                           
  1666                           ;main.c: 47:         TMR0H = 0xF8;
  1667  00003C  0EF8               	movlw	248
  1668  00003E  6ED7               	movwf	215,c	;volatile
  1669  000040                     
  1670                           ;main.c: 48:         TMR0L = 0x30;
  1671  000040  0E30               	movlw	48
  1672  000042  6ED6               	movwf	214,c	;volatile
  1673  000044                     
  1674                           ;main.c: 49:         INTCONbits.TMR0IF = 0;
  1675  000044  94F2               	bcf	242,2,c	;volatile
  1676  000046                     i2l122:
  1677  000046  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1678  000048  0011               	retfie		f
  1679  00004A                     __end_of_INTERRUPT_InterruptManagerHigh:
  1680                           	callstack 0
  1681                           
  1682                           	psect	rparam
  1683  0000                     
  1684                           	psect	temp
  1685  000056                     btemp:
  1686                           	callstack 0
  1687  000056                     	ds	1
  1688  0000                     int$flags	set	btemp
  1689  0000                     wtemp8	set	btemp+1
  1690  0000                     ttemp5	set	btemp+1
  1691  0000                     ttemp6	set	btemp+4
  1692  0000                     ttemp7	set	btemp+8
  1693                           
  1694                           	psect	idloc
  1695                           
  1696                           ;Config register IDLOC0 @ 0x200000
  1697                           ;	unspecified, using default values
  1698  200000                     	org	2097152
  1699  200000  FF                 	db	255
  1700                           
  1701                           ;Config register IDLOC1 @ 0x200001
  1702                           ;	unspecified, using default values
  1703  200001                     	org	2097153
  1704  200001  FF                 	db	255
  1705                           
  1706                           ;Config register IDLOC2 @ 0x200002
  1707                           ;	unspecified, using default values
  1708  200002                     	org	2097154
  1709  200002  FF                 	db	255
  1710                           
  1711                           ;Config register IDLOC3 @ 0x200003
  1712                           ;	unspecified, using default values
  1713  200003                     	org	2097155
  1714  200003  FF                 	db	255
  1715                           
  1716                           ;Config register IDLOC4 @ 0x200004
  1717                           ;	unspecified, using default values
  1718  200004                     	org	2097156
  1719  200004  FF                 	db	255
  1720                           
  1721                           ;Config register IDLOC5 @ 0x200005
  1722                           ;	unspecified, using default values
  1723  200005                     	org	2097157
  1724  200005  FF                 	db	255
  1725                           
  1726                           ;Config register IDLOC6 @ 0x200006
  1727                           ;	unspecified, using default values
  1728  200006                     	org	2097158
  1729  200006  FF                 	db	255
  1730                           
  1731                           ;Config register IDLOC7 @ 0x200007
  1732                           ;	unspecified, using default values
  1733  200007                     	org	2097159
  1734  200007  FF                 	db	255
  1735                           
  1736                           	psect	config
  1737                           
  1738                           ; Padding undefined space
  1739  300000                     	org	3145728
  1740  300000  FF                 	db	255
  1741                           
  1742                           ;Config register CONFIG1H @ 0x300001
  1743                           ;	Oscillator Selection bits
  1744                           ;	FOSC = INTIO67, Internal oscillator block
  1745                           ;	4X PLL Enable
  1746                           ;	PLLCFG = OFF, Oscillator used directly
  1747                           ;	Primary clock enable bit
  1748                           ;	PRICLKEN = ON, Primary clock enabled
  1749                           ;	Fail-Safe Clock Monitor Enable bit
  1750                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1751                           ;	Internal/External Oscillator Switchover bit
  1752                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1753  300001                     	org	3145729
  1754  300001  28                 	db	40
  1755                           
  1756                           ;Config register CONFIG2L @ 0x300002
  1757                           ;	Power-up Timer Enable bit
  1758                           ;	PWRTEN = OFF, Power up timer disabled
  1759                           ;	Brown-out Reset Enable bits
  1760                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1761                           ;	Brown Out Reset Voltage bits
  1762                           ;	BORV = 190, VBOR set to 1.90 V nominal
  1763  300002                     	org	3145730
  1764  300002  19                 	db	25
  1765                           
  1766                           ;Config register CONFIG2H @ 0x300003
  1767                           ;	Watchdog Timer Enable bits
  1768                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  1769                           ;	Watchdog Timer Postscale Select bits
  1770                           ;	WDTPS = 32768, 1:32768
  1771  300003                     	org	3145731
  1772  300003  3C                 	db	60
  1773                           
  1774                           ; Padding undefined space
  1775  300004                     	org	3145732
  1776  300004  FF                 	db	255
  1777                           
  1778                           ;Config register CONFIG3H @ 0x300005
  1779                           ;	CCP2 MUX bit
  1780                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  1781                           ;	PORTB A/D Enable bit
  1782                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
  1783                           ;	P3A/CCP3 Mux bit
  1784                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  1785                           ;	HFINTOSC Fast Start-up
  1786                           ;	HFOFST = OFF, HFINTOSC output and ready status are delayed by the oscillator stable st
      +                          atus
  1787                           ;	Timer3 Clock input mux bit
  1788                           ;	T3CMX = PORTC0, T3CKI is on RC0
  1789                           ;	ECCP2 B output mux bit
  1790                           ;	P2BMX = PORTB5, P2B is on RB5
  1791                           ;	MCLR Pin Enable bit
  1792                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  1793  300005                     	org	3145733
  1794  300005  B5                 	db	181
  1795                           
  1796                           ;Config register CONFIG4L @ 0x300006
  1797                           ;	Stack Full/Underflow Reset Enable bit
  1798                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1799                           ;	Single-Supply ICSP Enable bit
  1800                           ;	LVP = OFF, Single-Supply ICSP disabled
  1801                           ;	Extended Instruction Set Enable bit
  1802                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1803                           ;	Background Debug
  1804                           ;	DEBUG = 0x1, unprogrammed default
  1805  300006                     	org	3145734
  1806  300006  81                 	db	129
  1807                           
  1808                           ; Padding undefined space
  1809  300007                     	org	3145735
  1810  300007  FF                 	db	255
  1811                           
  1812                           ;Config register CONFIG5L @ 0x300008
  1813                           ;	Code Protection Block 0
  1814                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1815                           ;	Code Protection Block 1
  1816                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1817                           ;	Code Protection Block 2
  1818                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1819                           ;	Code Protection Block 3
  1820                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1821  300008                     	org	3145736
  1822  300008  0F                 	db	15
  1823                           
  1824                           ;Config register CONFIG5H @ 0x300009
  1825                           ;	Boot Block Code Protection bit
  1826                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1827                           ;	Data EEPROM Code Protection bit
  1828                           ;	CPD = OFF, Data EEPROM not code-protected
  1829  300009                     	org	3145737
  1830  300009  C0                 	db	192
  1831                           
  1832                           ;Config register CONFIG6L @ 0x30000A
  1833                           ;	Write Protection Block 0
  1834                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1835                           ;	Write Protection Block 1
  1836                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1837                           ;	Write Protection Block 2
  1838                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1839                           ;	Write Protection Block 3
  1840                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1841  30000A                     	org	3145738
  1842  30000A  0F                 	db	15
  1843                           
  1844                           ;Config register CONFIG6H @ 0x30000B
  1845                           ;	Configuration Register Write Protection bit
  1846                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1847                           ;	Boot Block Write Protection bit
  1848                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1849                           ;	Data EEPROM Write Protection bit
  1850                           ;	WRTD = OFF, Data EEPROM not write-protected
  1851  30000B                     	org	3145739
  1852  30000B  E0                 	db	224
  1853                           
  1854                           ;Config register CONFIG7L @ 0x30000C
  1855                           ;	Table Read Protection Block 0
  1856                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1857                           ;	Table Read Protection Block 1
  1858                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1859                           ;	Table Read Protection Block 2
  1860                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1861                           ;	Table Read Protection Block 3
  1862                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1863  30000C                     	org	3145740
  1864  30000C  0F                 	db	15
  1865                           
  1866                           ;Config register CONFIG7H @ 0x30000D
  1867                           ;	Boot Block Table Read Protection bit
  1868                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1869  30000D                     	org	3145741
  1870  30000D  40                 	db	64
  1871                           tosu	equ	0xFFF
  1872                           tosh	equ	0xFFE
  1873                           tosl	equ	0xFFD
  1874                           stkptr	equ	0xFFC
  1875                           pclatu	equ	0xFFB
  1876                           pclath	equ	0xFFA
  1877                           pcl	equ	0xFF9
  1878                           tblptru	equ	0xFF8
  1879                           tblptrh	equ	0xFF7
  1880                           tblptrl	equ	0xFF6
  1881                           tablat	equ	0xFF5
  1882                           prodh	equ	0xFF4
  1883                           prodl	equ	0xFF3
  1884                           indf0	equ	0xFEF
  1885                           postinc0	equ	0xFEE
  1886                           postdec0	equ	0xFED
  1887                           preinc0	equ	0xFEC
  1888                           plusw0	equ	0xFEB
  1889                           fsr0h	equ	0xFEA
  1890                           fsr0l	equ	0xFE9
  1891                           wreg	equ	0xFE8
  1892                           indf1	equ	0xFE7
  1893                           postinc1	equ	0xFE6
  1894                           postdec1	equ	0xFE5
  1895                           preinc1	equ	0xFE4
  1896                           plusw1	equ	0xFE3
  1897                           fsr1h	equ	0xFE2
  1898                           fsr1l	equ	0xFE1
  1899                           bsr	equ	0xFE0
  1900                           indf2	equ	0xFDF
  1901                           postinc2	equ	0xFDE
  1902                           postdec2	equ	0xFDD
  1903                           preinc2	equ	0xFDC
  1904                           plusw2	equ	0xFDB
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8

Data Sizes:
    Strings     17
    Constant    0
    Data        55
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      85
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRhl[1]), 

    F6093.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRhl[1]), 

    LCD_putrs@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), 

    display.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRhl[1]), 

    S24$PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRhl[1]), 

    lcd.PORT	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTB(BITBIGSFRhl[1]), 


Critical Paths under _main in COMRAM

    _main->_LCD_Init
    _LCD_putrs->_LCD_putc
    _LCD_putc->_LCD_Out
    _LCD_Init->_LCD_Write
    _LCD_Write->_LCD_Out

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1295
                                             15 COMRAM     8     8      0
                           _LCD_Init
                          _LCD_Write
                           _LCD_putc
                          _LCD_putrs
                        _MCU_Delayms
                           _MCU_Init
 ---------------------------------------------------------------------------------
 (1) _MCU_Init                                             0     0      0       0
                          _RTCC_Init
 ---------------------------------------------------------------------------------
 (2) _RTCC_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MCU_Delayms                                          5     3      2     426
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _LCD_putrs                                            6     4      2     256
                                              8 COMRAM     6     4      2
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (2) _LCD_putc                                             4     4      0      90
                                              4 COMRAM     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             7     2      5     221
                                              8 COMRAM     7     2      5
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (1) _LCD_Write                                            4     4      0      75
                                              4 COMRAM     4     4      0
                            _LCD_Out
 ---------------------------------------------------------------------------------
 (3) _LCD_Out                                              4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManagerHigh                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Write
       _LCD_Out
   _LCD_Write
   _LCD_putc
     _LCD_Out
   _LCD_putrs
     _LCD_putc
   _MCU_Delayms
   _MCU_Init
     _RTCC_Init

 _INTERRUPT_InterruptManagerHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      55       1       90.4%
BITBIGSFRl          45      0       0      21        0.0%
BITBIGSFRhhllll     3B      0       0      19        0.0%
BITBIGSFRhhlh       19      0       0      16        0.0%
BITBIGSFRhl          F      0       0      20        0.0%
BITBIGSFRhhh         D      0       0      15        0.0%
BITBIGSFRhhlllh      2      0       0      18        0.0%
BITBIGSFRhhllh       1      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      55      22        0.0%
DATA                 0      0      55      24        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Sep 18 00:23:43 2025

                                    l30 0B92                                      l27 07B6  
                                    l39 0AF2                                      l55 09FE  
                                    l67 0BE8                                      u10 0624  
                                    u11 0620                                      u40 0688  
                                    u24 0638                                      u41 0684  
                                    u25 0634                                      u34 0662  
                                    u35 065E                                      u70 06F4  
                                    u54 06A0                                      u71 06F0  
                                    u55 069C                                      u64 06CE  
                                    u65 06CA                                      u84 0708  
                                    u85 0704                                      u94 0732  
                                    u95 072E                                     l221 0C5E  
                                   l215 0CD2                                     l224 0CB8  
                                   l218 0C48                                     l900 0616  
                                   l910 06B6                                     l902 0624  
                                   l920 0758                                     l912 06E6  
                                   l904 064E                                     l922 0786  
                                   l914 06F4                                     l906 067A  
                                   l930 0B52                                     l916 071E  
                                   l908 0688                                     l932 0B62  
                                   l924 0AF6                                     l940 095C  
                                   l918 074A                                     l926 0B22  
                                   l942 0964                                     l934 0902  
                                   l950 0C98                                     l928 0B28  
                                   l944 0994                                     l936 0928  
                                   l960 0CB4                                     l952 0CA2  
                                   l946 099C                                     l938 0932  
                                   l962 0CB6                                     l954 0CAE  
                                   l948 09CE                                     l956 0CB0  
                                   l958 0CB2                                     u100 0758  
                                   u101 0754                                     u114 0770  
                                   u115 076C                                     u124 079E  
                                   u204 09E6                                     u125 079A  
                                   u205 09E2                                     u134 0B0A  
                                   u135 0B06                                     u144 0B40  
                                   u400 0C5E                                     u145 0B3C  
                                   u401 0C5A                                     u154 0B7A  
                                   u155 0B76                                     u411 07C6  
                                   u164 0916                                     u165 0912  
                                   u421 07D8                                     u174 094A  
                                   u430 0854                                     u351 0A0A  
                                   u175 0946                                     u431 0850  
                                   u360 0A2A                                     u184 097C  
                                   u440 08AC                                     u361 0A26  
                                   u185 0978                                     u441 08A8  
                                   u370 0A4A                                     u194 09B4  
                                   u450 08EC                                     u507 0A8A  
                                   u371 0A46                                     u195 09B0  
                                   u451 08E8                                     u380 0A6A  
                                   u517 0AA0                                     u381 0A66  
                                   u390 0BE8                                     u527 0B58  
                                   u391 0BE4                                     u467 0C3A  
                                   u477 095E                                     u487 09C8  
                                   u497 0A74                         LCD_Init@display 0040  
                                   _lcd 004F                                     wreg 000FE8  
                       __end_of_LCD_Out 07B8                                    l1200 0AD2  
                                  l1024 0CBA                                    l1210 0AE6  
                                  l1026 0CCC                                    l1212 0AEC  
                                  l1220 0BBC                                    l1028 0CCE  
                                  l1300 087C                                    l1206 0AD4  
                                  l1222 0BC0                                    l1310 08AC  
                                  l1302 088E                                    l1230 07B8  
                                  l1208 0ADE                                    l1216 0B94  
                                  l1224 0C28                                    l1304 089A  
                                  l1240 07F0                                    l1232 07BC  
                                  l1170 0A32                                    l1218 0BA0  
                                  l1226 0C34                                    l1330 08EC  
                                  l1322 08BC                                    l1306 089C  
                                  l1242 07F6                                    l1234 07CE  
                                  l1180 0A7E                                    l1172 0A4A  
                                  l1164 0A00                                    l1228 0C44  
                                  l1324 08CE                                    l1316 08B8  
                                  l1244 07FC                                    l1236 07E4  
                                  l1190 0AB6                                    l1182 0A84  
                                  l1174 0A52                                    l1166 0A12  
                                  l1326 08DA                                    l1270 0824  
                                  l1254 0808                                    l1246 0802  
                                  l1238 07EA                                    l1192 0ABC  
                                  l1184 0A9A                                    l1176 0A6A  
                                  l1168 0A2A                                    l1328 08DC  
                                  l1280 0860                                    l1272 0836  
                                  l1264 0820                                    l1194 0AC2  
                                  l1186 0AAA                                    l1178 0A6E  
                                  l1282 0866                                    l1274 0842  
                                  l1258 0814                                    l1196 0AC8  
                                  l1188 0AB0                                    l1284 086C  
                                  l1276 0844                                    l1198 0ACE  
                                  l1294 0878                                    l1286 0872  
                                  l1278 0854                                    STR_1 0601  
                                  _main 07B8                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    btemp 0056  
                                  start 004A                             LCD_Init@cmd 0046  
                          ___param_bank 000000                        __end_of_LCD_Init 0AF4  
                      __end_of_LCD_putc 0A00                                   ?_main 0038  
                      __end_of_MCU_Init 0CD4                                   i2l122 0046  
                                 _TMR0H 000FD7                                   _TMR0L 000FD6  
                                 _PORTA 000F80                                   _PORTB 000F81  
                                 _PORTC 000F82                                   _TRISA 000F92  
                                 _TRISB 000F93                                   _TRISC 000F94  
                          ?_MCU_Delayms 0038                                   main@c 004C  
                                 tablat 000FF5                                   plusw0 000FEB  
                                 plusw1 000FE3                                   plusw2 000FDB  
                                 ttemp5 0057                                   ttemp6 005A  
                                 ttemp7 005E                                   status 000FD8  
                                 wtemp8 0057                         __initialization 0BEA  
                          __end_of_main 0900                                  ??_main 0047  
                         __activetblptr 000001                               ??_LCD_Out 0038  
                     __end_of_LCD_Write 0B94                       __end_of_LCD_putrs 0BEA  
                                _ANSELA 000F38                                  _ANSELB 000F39  
                                _ANSELC 000F3A                                  i2l1050 0032  
                                i2l1052 0034                                  i2l1044 000A  
                                i2l1054 003C                                  i2l1046 0018  
                                i2l1056 0040                                  i2l1048 001C  
                                i2l1058 0044                       __end_of_RTCC_Init 0CBA  
                                clear_0 0C10                                  isa$std 000001  
                                _text_1 0022                                  _text_2 0001  
                          __pdataCOMRAM 0001                            __mediumconst 0000  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8        ??_INTERRUPT_InterruptManagerHigh 0038  
       ?_INTERRUPT_InterruptManagerHigh 0038                              __accesstop 0060  
               __end_of__initialization 0C16                               ?_LCD_Init 0040  
                             ?_LCD_putc 0038                           ___rparam_used 000001  
                             ?_MCU_Init 0038                          __pcstackCOMRAM 0038  
                             LCD_putc@c 003F                              ??_LCD_Init 0045  
                            ??_LCD_putc 003C                              ??_MCU_Init 0038  
                               _LCD_Out 0614                                 i2u28_40 0018  
                               i2u28_41 0014                                 i2u29_40 0032  
                               i2u29_41 002E                                 __Hparam 0000  
                               __Lparam 0000                            __psmallconst 0600  
                               __pcinit 0BEA                                 __ramtop 0600  
                               __ptext0 07B8                                 __ptext1 0CBA  
                               __ptext2 0C98                                 __ptext3 0C28  
                               __ptext4 0B94                                 __ptext5 0900  
                               __ptext6 0A00                                 __ptext7 0AF4  
                               __ptext8 0614                               _T0CONbits 000FD5  
                               main@lcd 0047                               _LCD_Write 0AF4  
                  end_of_initialization 0C16                               _LCD_putrs 0B94  
                               postdec1 000FE5                                 postinc0 000FEE  
                             _RTCC_Init 0C98                               _PORTCbits 000F82  
                             _TRISCbits 000F94                              ?_LCD_Write 0038  
                            ?_LCD_putrs 0040                           __pidataCOMRAM 0C60  
                            LCD_Write@c 003F                              ?_RTCC_Init 0038  
                   start_initialization 0BEA                              LCD_putrs@a 0040  
                            LCD_putrs@i 0044                         MCU_Delayms@time 0038  
                         ??_MCU_Delayms 003A                                ?_LCD_Out 0038  
                           __pbssCOMRAM 004F                                LCD_Out@c 003B  
                           ??_LCD_Write 003C                             ??_LCD_putrs 0042  
                             __pintcode 0008                             ??_RTCC_Init 0038  
                           __smallconst 0600                     __end_of_MCU_Delayms 0C60  
                              _LCD_Init 0A00                                _LCD_putc 0900  
                              _MCU_Init 0CBA                                _RCONbits 000FD0  
                             main@F6093 0033                               main@c_550 004E  
                             main@c_549 004D                             _INTCON2bits 000FF1  
                             copy_data0 0BFE                                __Hrparam 0000  
                              __Lrparam 0000                            __Lsmallconst 0600  
                        MCU_Delayms@acc 003B                             _MCU_Delayms 0C28  
                              isa$xinst 000000                                int$flags 0056  
                            _INTCONbits 000FF2                                intlevel2 0000  
                            _OSCCONbits 000FD3  __end_of_INTERRUPT_InterruptManagerHigh 004A  
        _INTERRUPT_InterruptManagerHigh 0008                              _RTCC_Count 0054  
